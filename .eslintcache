[{"D:\\Projects\\auto-crm\\client\\src\\index.tsx":"1","D:\\Projects\\auto-crm\\client\\src\\components\\SpecifyCards\\SpecifyCards.tsx":"2","D:\\Projects\\auto-crm\\client\\src\\components\\AddNewClientForm\\AddNewClientForm.tsx":"3","D:\\Projects\\auto-crm\\client\\src\\store\\api\\cases-api.ts":"4","D:\\Projects\\auto-crm\\client\\src\\layouts\\SpecifyLayout\\SpecifyLayout.tsx":"5","D:\\Projects\\auto-crm\\client\\src\\store.ts":"6","D:\\Projects\\auto-crm\\client\\src\\layouts\\NewClientLayout\\NewClientLayout.tsx":"7","D:\\Projects\\auto-crm\\client\\src\\store\\api\\axios.config.ts":"8","D:\\Projects\\auto-crm\\client\\src\\layouts\\CasesLayout\\CasesLayout.tsx":"9","D:\\Projects\\auto-crm\\client\\src\\components\\AllCasesList\\AllCasesList.tsx":"10","D:\\Projects\\auto-crm\\client\\src\\store\\selectors.ts":"11","D:\\Projects\\auto-crm\\client\\src\\components\\AllCasesList\\CasesListItem\\CasesListItem.tsx":"12","D:\\Projects\\auto-crm\\client\\src\\App.tsx":"13","D:\\Projects\\auto-crm\\client\\src\\layouts\\DetailCaseLayout\\DetailCaseLayout.tsx":"14","D:\\Projects\\auto-crm\\client\\src\\components\\DetailCaseCard\\DetailCaseCard.tsx":"15","D:\\Projects\\auto-crm\\client\\src\\utils\\name_utils.ts":"16","D:\\Projects\\auto-crm\\client\\src\\layouts\\EditCaseLayout\\EditCaseLayout.tsx":"17","D:\\Projects\\auto-crm\\client\\src\\components\\EditCurrentCaseForm\\EditCurrentCaseForm.tsx":"18","D:\\Projects\\auto-crm\\client\\src\\utils\\helpers.ts":"19","D:\\Projects\\auto-crm\\client\\src\\store\\reducers\\app_Reducer.ts":"20","D:\\Projects\\auto-crm\\client\\src\\components\\AddNewClientForm\\case-form-config.ts":"21","D:\\Projects\\auto-crm\\client\\src\\store\\reducers\\case_Reducer.ts":"22","D:\\Projects\\auto-crm\\client\\src\\layouts\\CasesInProgress\\CasesInProgressLayout.tsx":"23","D:\\Projects\\auto-crm\\client\\src\\store\\api\\cases-in-progress-api.ts":"24","D:\\Projects\\auto-crm\\client\\src\\store\\reducers\\caseInProgress_reducer.ts":"25","D:\\Projects\\auto-crm\\client\\src\\layouts\\CompletedCasesLayout\\CompletedCasesLayout.tsx":"26","D:\\Projects\\auto-crm\\client\\src\\utils\\useContainElements.ts":"27","D:\\Projects\\auto-crm\\client\\src\\reportWebVitals.ts":"28","D:\\Projects\\auto-crm\\client\\src\\components\\FormFields\\form-fields.tsx":"29","D:\\Projects\\auto-crm\\client\\src\\components\\Loader\\Loader.tsx":"30","D:\\Projects\\auto-crm\\client\\src\\components\\Navbar\\Navbar.tsx":"31","D:\\Projects\\auto-crm\\client\\src\\components\\NothingWasFetched\\NothingWasFetched.tsx":"32","D:\\Projects\\auto-crm\\client\\src\\utils\\useMessages.ts":"33","D:\\Projects\\auto-crm\\client\\src\\components\\ListLength\\ListLength.tsx":"34","D:\\Projects\\auto-crm\\client\\src\\store\\reducers\\error_Reducer.ts":"35","D:\\Projects\\auto-crm\\client\\src\\utils\\useNewCase.ts":"36","D:\\Projects\\auto-crm\\client\\src\\layouts\\PricesLayout\\PricesLayout.tsx":"37","D:\\Projects\\auto-crm\\client\\src\\components\\PricesSearch\\PricesSearch.tsx":"38","D:\\Projects\\auto-crm\\client\\src\\store\\reducers\\completedCase_Reducer.ts":"39","D:\\Projects\\auto-crm\\client\\src\\store\\api\\completed-cases.api.ts":"40","D:\\Projects\\auto-crm\\client\\src\\components\\Pricelist\\Pricelist.tsx":"41","D:\\Projects\\auto-crm\\client\\src\\store\\services\\PricelistService.ts":"42","D:\\Projects\\auto-crm\\client\\src\\components\\Pricelist\\PricelistItem\\PricelistItem.tsx":"43","D:\\Projects\\auto-crm\\client\\src\\store\\api\\pricelist-api.ts":"44","D:\\Projects\\auto-crm\\client\\src\\components\\Pricelist\\pricelist-table-config.tsx":"45","D:\\Projects\\auto-crm\\client\\src\\store\\services\\AppService.ts":"46","D:\\Projects\\auto-crm\\client\\src\\utils\\usePricelist.ts":"47","D:\\Projects\\auto-crm\\client\\src\\utils\\FuseSearch.ts":"48","D:\\Projects\\auto-crm\\client\\src\\layouts\\CostsLayout\\CostsLayout.tsx":"49","D:\\Projects\\auto-crm\\client\\src\\components\\CreateCostsCard\\CreateCostsCard.tsx":"50","D:\\Projects\\auto-crm\\client\\src\\components\\CostsList\\CostsList.tsx":"51","D:\\Projects\\auto-crm\\client\\src\\store\\services\\CostsService.ts":"52","D:\\Projects\\auto-crm\\client\\src\\components\\PricelistSelect\\PricelistSelect.tsx":"53","D:\\Projects\\auto-crm\\client\\src\\utils\\usePricelistSelection.tsx":"54","D:\\Projects\\auto-crm\\client\\src\\utils\\dineroHelpers.ts":"55","D:\\Projects\\auto-crm\\client\\src\\store\\api\\costs-api.ts":"56","D:\\Projects\\auto-crm\\client\\src\\utils\\useCostsList.tsx":"57","D:\\Projects\\auto-crm\\client\\src\\components\\Authentication\\LoginForm\\LoginForm.tsx":"58","D:\\Projects\\auto-crm\\client\\src\\layouts\\AuthLayout\\AuthLayout.tsx":"59","D:\\Projects\\auto-crm\\client\\src\\utils\\ProtectedRoute.tsx":"60","D:\\Projects\\auto-crm\\client\\src\\store\\services\\AuthenticationService.ts":"61","D:\\Projects\\auto-crm\\client\\src\\store\\api\\auth-api.ts":"62","D:\\Projects\\auto-crm\\client\\src\\utils\\useAuthentication.tsx":"63","D:\\Projects\\auto-crm\\client\\src\\localization\\i18n.ts":"64","D:\\Projects\\auto-crm\\client\\src\\components\\SideMenu\\SideMenu.tsx":"65","D:\\Projects\\auto-crm\\client\\src\\components\\Navbar\\navbar-keys-helpers.tsx":"66","D:\\Projects\\auto-crm\\client\\src\\components\\Authentication\\form-config.ts":"67","D:\\Projects\\auto-crm\\client\\src\\components\\DateTime\\DateTime.tsx":"68"},{"size":729,"mtime":1612795136123,"results":"69","hashOfConfig":"70"},{"size":1893,"mtime":1612796388979,"results":"71","hashOfConfig":"70"},{"size":5874,"mtime":1612964253662,"results":"72","hashOfConfig":"70"},{"size":968,"mtime":1611844527421,"results":"73","hashOfConfig":"70"},{"size":348,"mtime":1611789428546,"results":"74","hashOfConfig":"70"},{"size":996,"mtime":1611842194689,"results":"75","hashOfConfig":"70"},{"size":237,"mtime":1611426122319,"results":"76","hashOfConfig":"70"},{"size":228,"mtime":1610630955972,"results":"77","hashOfConfig":"70"},{"size":1725,"mtime":1611790106672,"results":"78","hashOfConfig":"70"},{"size":444,"mtime":1611335652069,"results":"79","hashOfConfig":"70"},{"size":1138,"mtime":1611776206247,"results":"80","hashOfConfig":"70"},{"size":1445,"mtime":1612802904628,"results":"81","hashOfConfig":"70"},{"size":2774,"mtime":1612875110445,"results":"82","hashOfConfig":"70"},{"size":2779,"mtime":1612805417903,"results":"83","hashOfConfig":"70"},{"size":5592,"mtime":1612964546534,"results":"84","hashOfConfig":"70"},{"size":87,"mtime":1612280840496,"results":"85","hashOfConfig":"70"},{"size":1115,"mtime":1611789323692,"results":"86","hashOfConfig":"70"},{"size":6566,"mtime":1612805959995,"results":"87","hashOfConfig":"70"},{"size":1937,"mtime":1612982902438,"results":"88","hashOfConfig":"70"},{"size":843,"mtime":1611533548609,"results":"89","hashOfConfig":"70"},{"size":711,"mtime":1612204609070,"results":"90","hashOfConfig":"70"},{"size":4784,"mtime":1612210671349,"results":"91","hashOfConfig":"70"},{"size":1821,"mtime":1611789081904,"results":"92","hashOfConfig":"70"},{"size":440,"mtime":1611844518884,"results":"93","hashOfConfig":"70"},{"size":2736,"mtime":1611777353511,"results":"94","hashOfConfig":"70"},{"size":1810,"mtime":1611789205014,"results":"95","hashOfConfig":"70"},{"size":1008,"mtime":1611777456149,"results":"96","hashOfConfig":"70"},{"size":425,"mtime":1609346309311,"results":"97","hashOfConfig":"70"},{"size":429,"mtime":1611331008780,"results":"98","hashOfConfig":"70"},{"size":121,"mtime":1611426140495,"results":"99","hashOfConfig":"70"},{"size":1950,"mtime":1612874034026,"results":"100","hashOfConfig":"70"},{"size":320,"mtime":1612803533011,"results":"101","hashOfConfig":"70"},{"size":328,"mtime":1611405585328,"results":"102","hashOfConfig":"70"},{"size":342,"mtime":1612803416053,"results":"103","hashOfConfig":"70"},{"size":1040,"mtime":1611678196872,"results":"104","hashOfConfig":"70"},{"size":1009,"mtime":1611772988334,"results":"105","hashOfConfig":"70"},{"size":305,"mtime":1611843161128,"results":"106","hashOfConfig":"70"},{"size":753,"mtime":1612873736706,"results":"107","hashOfConfig":"70"},{"size":2484,"mtime":1611778066171,"results":"108","hashOfConfig":"70"},{"size":484,"mtime":1611844583490,"results":"109","hashOfConfig":"70"},{"size":1067,"mtime":1612873580017,"results":"110","hashOfConfig":"70"},{"size":1312,"mtime":1612193114691,"results":"111","hashOfConfig":"70"},{"size":626,"mtime":1611937170130,"results":"112","hashOfConfig":"70"},{"size":280,"mtime":1611844581281,"results":"113","hashOfConfig":"70"},{"size":690,"mtime":1612873526057,"results":"114","hashOfConfig":"70"},{"size":509,"mtime":1611941663514,"results":"115","hashOfConfig":"70"},{"size":1030,"mtime":1612381290625,"results":"116","hashOfConfig":"70"},{"size":1414,"mtime":1611959458863,"results":"117","hashOfConfig":"70"},{"size":1454,"mtime":1612297796345,"results":"118","hashOfConfig":"70"},{"size":884,"mtime":1612872236773,"results":"119","hashOfConfig":"70"},{"size":2594,"mtime":1612967775018,"results":"120","hashOfConfig":"70"},{"size":4278,"mtime":1612612777698,"results":"121","hashOfConfig":"70"},{"size":1222,"mtime":1612872788998,"results":"122","hashOfConfig":"70"},{"size":1185,"mtime":1612872720151,"results":"123","hashOfConfig":"70"},{"size":333,"mtime":1612968630999,"results":"124","hashOfConfig":"70"},{"size":691,"mtime":1612298039790,"results":"125","hashOfConfig":"70"},{"size":1679,"mtime":1612284027143,"results":"126","hashOfConfig":"70"},{"size":1768,"mtime":1612803797851,"results":"127","hashOfConfig":"70"},{"size":208,"mtime":1612442371328,"results":"128","hashOfConfig":"70"},{"size":591,"mtime":1612445668151,"results":"129","hashOfConfig":"70"},{"size":1866,"mtime":1612611280442,"results":"130","hashOfConfig":"70"},{"size":270,"mtime":1612450686057,"results":"131","hashOfConfig":"70"},{"size":667,"mtime":1612556993773,"results":"132","hashOfConfig":"70"},{"size":419,"mtime":1612981644054,"results":"133","hashOfConfig":"70"},{"size":2642,"mtime":1613049010175,"results":"134","hashOfConfig":"70"},{"size":590,"mtime":1612876942692,"results":"135","hashOfConfig":"70"},{"size":155,"mtime":1612442633955,"results":"136","hashOfConfig":"70"},{"size":780,"mtime":1612983459374,"results":"137","hashOfConfig":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},"19gd3h2",{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"144"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"144"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"144"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"144"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"144"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"144"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"144"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"144"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"144"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"241"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"144"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"144"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"274","messages":"275","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"241"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"144"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\auto-crm\\client\\src\\index.tsx",[],["298","299"],"D:\\Projects\\auto-crm\\client\\src\\components\\SpecifyCards\\SpecifyCards.tsx",["300","301"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card, Badge, Button } from 'antd'\r\nimport { allCasesListType } from '../../store/types/casesReducer.types'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst gridStyle: React.CSSProperties = {\r\n  width: '25%',\r\n  textAlign: 'center',\r\n  fontWeight: 'bold',\r\n  margin: '10px 10px',\r\n  cursor: 'pointer',\r\n}\r\n\r\ntype Props = {\r\n  contain: {\r\n    cases: allCasesListType\r\n    inProgress: allCasesListType\r\n    completed: allCasesListType\r\n  }\r\n}\r\n\r\nexport const SpecifyCards: React.FC<Props> = ({ contain }) => {\r\n  const { t } = useTranslation()\r\n  // TODO: LINKS ON THE FULL BLOCK\r\n  return (\r\n    <div className='container'>\r\n      <Button className='specify-card'>\r\n        <Link className='specify-link' to='/new'>\r\n          {t('Оформить заявку')}\r\n        </Link>\r\n      </Button>\r\n      <Badge count={contain.cases.length} className='card-badge'>\r\n        <Button className='specify-card'>\r\n          <Link className='specify-link' to='/cases'>\r\n            {t('Необработанные заявки')}\r\n          </Link>\r\n        </Button>\r\n      </Badge>\r\n\r\n      <Badge\r\n        count={contain.inProgress.length}\r\n        style={{ background: '#239ade' }}\r\n        className='card-badge'\r\n      >\r\n        <Button className='specify-card'>\r\n          <Link className='specify-link' to='/inprogress'>\r\n            {t('Выполняемые заявки')}\r\n          </Link>\r\n        </Button>\r\n      </Badge>\r\n\r\n      <Badge\r\n        count={contain.completed.length}\r\n        style={{ background: '#08c434' }}\r\n        className='card-badge'\r\n      >\r\n        <Button className='specify-card'>\r\n          <Link className='specify-link' to='/completed'>\r\n            {t('Выполненные заявки')}\r\n          </Link>\r\n        </Button>\r\n      </Badge>\r\n    </div>\r\n  )\r\n}\r\n",["302","303"],"D:\\Projects\\auto-crm\\client\\src\\components\\AddNewClientForm\\AddNewClientForm.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\store\\api\\cases-api.ts",[],"D:\\Projects\\auto-crm\\client\\src\\layouts\\SpecifyLayout\\SpecifyLayout.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\store.ts",[],["304","305"],"D:\\Projects\\auto-crm\\client\\src\\layouts\\NewClientLayout\\NewClientLayout.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\store\\api\\axios.config.ts",[],["306","307"],"D:\\Projects\\auto-crm\\client\\src\\layouts\\CasesLayout\\CasesLayout.tsx",["308"],"import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { RootAppState } from '../../store'\r\nimport { getAllCases } from '../../store/reducers/case_Reducer'\r\nimport { AllCasesList } from '../../components/AllCasesList/AllCasesList'\r\nimport { Loader } from '../../components/Loader/Loader'\r\nimport { NothingWasFetched } from '../../components/NothingWasFetched/NothingWasFetched'\r\nimport { allCasesListType } from '../../store/types/casesReducer.types'\r\nimport { ListLength } from '../../components/ListLength/ListLength'\r\nimport { useMessages } from '../../utils/useMessages'\r\nimport { clearError } from '../../utils/helpers'\r\nimport {\r\n  casesSelector,\r\n  errorsSelector,\r\n  loadingSelector,\r\n} from '../../store/selectors'\r\n\r\nexport const CasesLayout: React.FC = () => {\r\n  const loading = useSelector((state: RootAppState) => loadingSelector(state))\r\n  const error = useSelector((state: RootAppState) => errorsSelector(state))\r\n  const allCasesList: allCasesListType = useSelector((state: RootAppState) =>\r\n    casesSelector(state)\r\n  )\r\n  const { errorMessage } = useMessages()\r\n  const dispatch = useDispatch()\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getAllCases())\r\n\r\n    if (error) {\r\n      errorMessage(error.message)\r\n    }\r\n    return () => clearError(dispatch)\r\n  }, [])\r\n\r\n  if (error) return <NothingWasFetched />\r\n\r\n  if (!allCasesList.length && !loading) return <NothingWasFetched />\r\n\r\n  return (\r\n    <div>\r\n      <div className='content-section'>\r\n        {allCasesList && !loading ? (\r\n          <ListLength length={allCasesList.length} />\r\n        ) : null}\r\n        {loading ? <Loader /> : <AllCasesList allCases={allCasesList} />}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","D:\\Projects\\auto-crm\\client\\src\\components\\AllCasesList\\AllCasesList.tsx",[],["309","310"],"D:\\Projects\\auto-crm\\client\\src\\store\\selectors.ts",[],"D:\\Projects\\auto-crm\\client\\src\\components\\AllCasesList\\CasesListItem\\CasesListItem.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\App.tsx",["311","312"],"D:\\Projects\\auto-crm\\client\\src\\layouts\\DetailCaseLayout\\DetailCaseLayout.tsx",["313","314"],"import React from 'react'\r\nimport { match, useHistory, useParams } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { DetailCaseCard } from '../../components/DetailCaseCard/DetailCaseCard'\r\nimport { RootAppState } from '../../store'\r\nimport { deleteCase, getCaseDetails } from '../../store/reducers/case_Reducer'\r\nimport { Loader } from '../../components/Loader/Loader'\r\nimport { takeCaseInProgress } from '../../store/reducers/caseInProgress_reducer'\r\nimport { completeCase } from '../../store/reducers/completedCase_Reducer'\r\nimport { useMessages } from '../../utils/useMessages'\r\nimport { clearError, stopLoading } from '../../utils/helpers'\r\nimport {\r\n  currentCaseSelector,\r\n  errorsSelector,\r\n  loadingSelector,\r\n} from '../../store/selectors'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\ntype Params = {\r\n  _id: string\r\n}\r\n\r\nexport const DetailCaseLayout: React.FC = () => {\r\n  const loading = useSelector((state: RootAppState) => loadingSelector(state))\r\n  const error = useSelector((state: RootAppState) => errorsSelector(state))\r\n  const currentCaseDetails = useSelector((state: RootAppState) =>\r\n    currentCaseSelector(state)\r\n  )\r\n  const { successMessage, errorMessage } = useMessages()\r\n  const { t } = useTranslation()\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const { _id }: Params = useParams()\r\n\r\n  React.useEffect((): any => {\r\n    dispatch(getCaseDetails(_id))\r\n  }, [dispatch, _id])\r\n\r\n  React.useEffect(() => {\r\n    if (error) {\r\n      stopLoading(dispatch)\r\n      errorMessage(error.message)\r\n    }\r\n    return () => clearError(dispatch)\r\n  }, [error])\r\n\r\n  const returnRoute = (route: string) => history.push(route)\r\n\r\n  const returnAndSuccess = (message: string) => {\r\n    return setTimeout(() => {\r\n      returnRoute('/specify')\r\n      successMessage(message)\r\n    }, 500)\r\n  }\r\n\r\n  const deleteItemHandler = (_id: string) => {\r\n    dispatch(deleteCase(_id))\r\n\r\n    returnAndSuccess(t('Заявка была удалена успешно'))\r\n  }\r\n\r\n  const takeInProgressHandler = (_id: string) => {\r\n    dispatch(takeCaseInProgress(_id))\r\n\r\n    returnAndSuccess(t('Заявка переведена в статус выполнения'))\r\n  }\r\n\r\n  const completeCaseHandler = (_id: string) => {\r\n    dispatch(completeCase(_id))\r\n\r\n    returnAndSuccess(t('Заявка переведена в статус выполненных'))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <DetailCaseCard\r\n          item={currentCaseDetails}\r\n          deleteItemHandler={deleteItemHandler}\r\n          takeInProgressHandler={takeInProgressHandler}\r\n          completeCaseHandler={completeCaseHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","D:\\Projects\\auto-crm\\client\\src\\components\\DetailCaseCard\\DetailCaseCard.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\utils\\name_utils.ts",[],"D:\\Projects\\auto-crm\\client\\src\\layouts\\EditCaseLayout\\EditCaseLayout.tsx",["315"],"import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { match } from 'react-router-dom'\r\nimport { currentCaseSelector } from '../../store/selectors'\r\nimport { checkCurrentCaseStatus } from '../../utils/helpers'\r\nimport { RootAppState } from '../../store'\r\nimport { EditCurrentCaseForm } from '../../components/EditCurrentCaseForm/EditCurrentCaseForm'\r\nimport { getCaseDetails } from '../../store/reducers/case_Reducer'\r\n\r\ntype queryParams = {\r\n  _id: string\r\n}\r\n\r\ntype Props = {\r\n  match: match<queryParams>\r\n}\r\n\r\nexport const EditCaseLayout: React.FC<Props> = ({ match }) => {\r\n  const currentEditedCase = useSelector((state: RootAppState) =>\r\n    currentCaseSelector(state)\r\n  )\r\n  const dispatch = useDispatch()\r\n\r\n  // getting params _id\r\n  const _id = match.params._id\r\n\r\n  React.useEffect(() => {\r\n    if (checkCurrentCaseStatus(currentEditedCase._id!, _id)) return\r\n    dispatch(getCaseDetails(_id))\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      {currentEditedCase._id ? (\r\n        <EditCurrentCaseForm currentCase={currentEditedCase} />\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n","D:\\Projects\\auto-crm\\client\\src\\components\\EditCurrentCaseForm\\EditCurrentCaseForm.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\utils\\helpers.ts",["316"],"D:\\Projects\\auto-crm\\client\\src\\store\\reducers\\app_Reducer.ts",[],"D:\\Projects\\auto-crm\\client\\src\\components\\AddNewClientForm\\case-form-config.ts",[],["317","318"],"D:\\Projects\\auto-crm\\client\\src\\store\\reducers\\case_Reducer.ts",["319","320"],"import { caseType, allCasesListType } from '../types/casesReducer.types'\r\nimport { caseAPI } from '../api/cases-api'\r\nimport { RootAppState } from '../../store'\r\nimport { ActionsTypes } from '../types/rootActionsType'\r\nimport { ThunkAction } from 'redux-thunk'\r\nimport {\r\n  initializeLoading,\r\n  stopLoading,\r\n  separateCases,\r\n} from '../../utils/helpers'\r\nimport { actions as caseInProgressActions } from '../reducers/caseInProgress_reducer'\r\nimport { actions as errorActions } from '../reducers/error_Reducer'\r\n\r\nexport const initialState = {\r\n  newCase: {\r\n    ownerInfo: {\r\n      name: '',\r\n      surname: '',\r\n      adress: '',\r\n      contacts: {\r\n        email: '',\r\n        phoneNumber: '',\r\n      },\r\n    },\r\n    autoInfo: {\r\n      brand: '',\r\n      model: '',\r\n      year: '',\r\n      bodyNumber: '',\r\n      engine: {\r\n        volume: '',\r\n        specification: '',\r\n      },\r\n    },\r\n    problems: '',\r\n    result: '',\r\n    navigation: {\r\n      createdDate: '',\r\n      completedDate: '',\r\n      worker: '',\r\n    },\r\n    _id: '',\r\n    inProgress: false,\r\n    completed: false,\r\n    costed: false,\r\n  } as caseType,\r\n  allCasesList: [] as allCasesListType,\r\n}\r\n\r\ntype initialStateType = typeof initialState\r\n\r\n// base thunk type\r\ntype ThunkType = ThunkAction<Promise<void>, RootAppState, unknown, ActionsTypes>\r\n\r\nexport const caseReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): initialStateType => {\r\n  switch (action.type) {\r\n    case 'acrm/cases/SET_ALL_CASES_LIST':\r\n      return {\r\n        ...state,\r\n        allCasesList: action.payload,\r\n      }\r\n    case 'acrm/cases/SET_CURRENT_CASE':\r\n      return {\r\n        ...state,\r\n        newCase: action.payload,\r\n      }\r\n    case 'acrm/cases/CLEAR_CURRENT_CASE':\r\n      return {\r\n        ...state,\r\n        newCase: initialState.newCase,\r\n      }\r\n    case 'acrm/cases/DELETE_CASE':\r\n      return {\r\n        ...state,\r\n        allCasesList: state.allCasesList.filter(\r\n          (item) => item._id !== action.payload\r\n        ),\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// Action creators\r\nexport const actions = {\r\n  setAllCasesList: (allCasesList: allCasesListType) =>\r\n    ({\r\n      type: 'acrm/cases/SET_ALL_CASES_LIST',\r\n      payload: allCasesList,\r\n    } as const),\r\n  setCurrentCase: (currentCase: caseType) =>\r\n    ({\r\n      type: 'acrm/cases/SET_CURRENT_CASE',\r\n      payload: currentCase,\r\n    } as const),\r\n  clearCurrentCase: () =>\r\n    ({\r\n      type: 'acrm/cases/CLEAR_CURRENT_CASE',\r\n    } as const),\r\n  deleteCase: (_id: string) =>\r\n    ({\r\n      type: 'acrm/cases/DELETE_CASE',\r\n      payload: _id,\r\n    } as const),\r\n}\r\n\r\n// Thunk creators\r\nexport const addNewCase = (newCase: caseType): ThunkType => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    await caseAPI.addCase(newCase)\r\n  } catch (error) {\r\n    dispatch(\r\n      errorActions.setError({\r\n        code: 1,\r\n        message: 'Что-то пошло не так...',\r\n      })\r\n    )\r\n  }\r\n}\r\n\r\nexport const getAllCases = (): ThunkType => async (dispatch) => {\r\n  try {\r\n    initializeLoading(dispatch)\r\n    const allCasesList: allCasesListType = await caseAPI.getAllCases()\r\n\r\n    dispatch(actions.setAllCasesList(allCasesList))\r\n\r\n    stopLoading(dispatch)\r\n  } catch (error) {\r\n    dispatch(\r\n      errorActions.setError({\r\n        code: 1,\r\n        message: 'Не удалось загрузить список заявок...',\r\n      })\r\n    )\r\n  }\r\n}\r\n\r\nexport const getCaseDetails = (_id: string): ThunkType => async (dispatch) => {\r\n  try {\r\n    initializeLoading(dispatch)\r\n\r\n    const currentCase = await caseAPI.getCurrentCase(_id)\r\n\r\n    dispatch(actions.setCurrentCase(currentCase!))\r\n\r\n    stopLoading(dispatch)\r\n  } catch (error) {\r\n    dispatch(\r\n      errorActions.setError({\r\n        code: 1,\r\n        message: 'Не удалось загрузить детали заявки...',\r\n      })\r\n    )\r\n  }\r\n}\r\n\r\nexport const editCurrentCase = (\r\n  editedCase: caseType,\r\n  _id: string\r\n): ThunkType => async (dispatch) => {\r\n  try {\r\n    initializeLoading(dispatch)\r\n\r\n    const savedEditedCase = await caseAPI.editCurrentCase(editedCase, _id)\r\n\r\n    stopLoading(dispatch)\r\n\r\n    dispatch(actions.setCurrentCase(savedEditedCase))\r\n    dispatch(getCaseDetails(_id))\r\n  } catch (error) {\r\n    dispatch(\r\n      errorActions.setError({\r\n        code: 1,\r\n        message: 'Не удалось редактировать заявку...',\r\n      })\r\n    )\r\n  }\r\n}\r\n\r\nexport const deleteCase = (_id: string): ThunkType => async (dispatch) => {\r\n  try {\r\n    await caseAPI.deleteCase(_id)\r\n\r\n    dispatch(actions.deleteCase(_id))\r\n  } catch (error) {\r\n    dispatch(\r\n      errorActions.setError({\r\n        code: 1,\r\n        message: 'Не удалось удалить заявку...',\r\n      })\r\n    )\r\n  }\r\n}\r\n","D:\\Projects\\auto-crm\\client\\src\\layouts\\CasesInProgress\\CasesInProgressLayout.tsx",["321"],"import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { RootAppState } from '../../store'\r\nimport { allCasesListType } from '../../store/types/casesReducer.types'\r\nimport { getAllCasesInProgress } from '../../store/reducers/caseInProgress_reducer'\r\nimport { Loader } from '../../components/Loader/Loader'\r\nimport { NothingWasFetched } from '../../components/NothingWasFetched/NothingWasFetched'\r\nimport { AllCasesList } from '../../components/AllCasesList/AllCasesList'\r\nimport { ListLength } from '../../components/ListLength/ListLength'\r\nimport { useMessages } from '../../utils/useMessages'\r\nimport { clearError } from '../../utils/helpers'\r\nimport {\r\n  casesInProgressSelector,\r\n  errorsSelector,\r\n  loadingSelector,\r\n} from '../../store/selectors'\r\n\r\nexport const CasesInProgressLayout: React.FC = () => {\r\n  const loading = useSelector((state: RootAppState) => loadingSelector(state))\r\n  const error = useSelector((state: RootAppState) => errorsSelector(state))\r\n  const casesInProgressList: allCasesListType = useSelector(\r\n    (state: RootAppState) => casesInProgressSelector(state)\r\n  )\r\n  const { errorMessage } = useMessages()\r\n  const dispatch = useDispatch()\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getAllCasesInProgress())\r\n\r\n    if (error) {\r\n      errorMessage(error.message)\r\n    }\r\n    return () => clearError(dispatch)\r\n  }, [])\r\n\r\n  if (error) return <NothingWasFetched />\r\n\r\n  if (!casesInProgressList.length && !loading) return <NothingWasFetched />\r\n\r\n  return (\r\n    <div>\r\n      <div className='content-section'>\r\n        {casesInProgressList && !loading ? (\r\n          <ListLength length={casesInProgressList.length} />\r\n        ) : null}\r\n        {loading ? <Loader /> : <AllCasesList allCases={casesInProgressList} />}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","D:\\Projects\\auto-crm\\client\\src\\store\\api\\cases-in-progress-api.ts",["322"],"import { allCasesListType, caseType } from '../types/casesReducer.types'\r\nimport axios from './axios.config'\r\n\r\nexport const casesInProgressAPI = {\r\n  getAllCasesInProgress: async (): Promise<allCasesListType> => {\r\n    const casesInProgress = await axios.get('cases/inprogress')\r\n    return casesInProgress.data\r\n  },\r\n  takeCaseInProgress: async (_id: string): Promise<void> => {\r\n    await axios.put(`cases/toprogress/${_id}`)\r\n  },\r\n}\r\n","D:\\Projects\\auto-crm\\client\\src\\store\\reducers\\caseInProgress_reducer.ts",[],"D:\\Projects\\auto-crm\\client\\src\\layouts\\CompletedCasesLayout\\CompletedCasesLayout.tsx",["323"],"import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AllCasesList } from '../../components/AllCasesList/AllCasesList'\r\nimport { Loader } from '../../components/Loader/Loader'\r\nimport { ListLength } from '../../components/ListLength/ListLength'\r\nimport { NothingWasFetched } from '../../components/NothingWasFetched/NothingWasFetched'\r\nimport { RootAppState } from '../../store'\r\nimport { getAllCompletedCases } from '../../store/reducers/completedCase_Reducer'\r\nimport { allCasesListType } from '../../store/types/casesReducer.types'\r\nimport { clearError } from '../../utils/helpers'\r\nimport { useMessages } from '../../utils/useMessages'\r\nimport {\r\n  completedCasesSelector,\r\n  errorsSelector,\r\n  loadingSelector,\r\n} from '../../store/selectors'\r\n\r\nexport const CompletedCasesLayout: React.FC = () => {\r\n  const loading = useSelector((state: RootAppState) => loadingSelector(state))\r\n  const error = useSelector((state: RootAppState) => errorsSelector(state))\r\n  const completedCasesList: allCasesListType = useSelector(\r\n    (state: RootAppState) => completedCasesSelector(state)\r\n  )\r\n  const { errorMessage } = useMessages()\r\n  const dispatch = useDispatch()\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getAllCompletedCases())\r\n\r\n    if (error) {\r\n      errorMessage(error.message)\r\n    }\r\n    return () => clearError(dispatch)\r\n  }, [])\r\n\r\n  if (error) return <NothingWasFetched />\r\n\r\n  if (!completedCasesList.length && !loading) return <NothingWasFetched />\r\n\r\n  return (\r\n    <div>\r\n      <div className='content-section'>\r\n        {completedCasesList && !loading ? (\r\n          <ListLength length={completedCasesList.length} />\r\n        ) : null}\r\n        {loading ? <Loader /> : <AllCasesList allCases={completedCasesList} />}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","D:\\Projects\\auto-crm\\client\\src\\utils\\useContainElements.ts",["324"],"import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootAppState } from '../store'\r\nimport { getAllCompletedCases } from '../store/reducers/completedCase_Reducer'\r\nimport { getAllCases } from '../store/reducers/case_Reducer'\r\nimport {\r\n  casesInProgressSelector,\r\n  casesSelector,\r\n  completedCasesSelector,\r\n} from '../store/selectors'\r\nimport { getAllCasesInProgress } from '../store/reducers/caseInProgress_reducer'\r\n\r\nexport const useContainElements = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const cases = useSelector((state: RootAppState) => casesSelector(state))\r\n  const inProgress = useSelector((state: RootAppState) =>\r\n    casesInProgressSelector(state)\r\n  )\r\n  const completed = useSelector((state: RootAppState) =>\r\n    completedCasesSelector(state)\r\n  )\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getAllCases())\r\n    dispatch(getAllCasesInProgress())\r\n    dispatch(getAllCompletedCases())\r\n  }, [])\r\n\r\n  return { cases, inProgress, completed }\r\n}\r\n","D:\\Projects\\auto-crm\\client\\src\\reportWebVitals.ts",[],["325","326"],"D:\\Projects\\auto-crm\\client\\src\\components\\FormFields\\form-fields.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\components\\Loader\\Loader.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\components\\Navbar\\Navbar.tsx",["327"],"import React from 'react'\r\nimport { Button, Menu, Row } from 'antd'\r\nimport { ArrowLeftOutlined } from '@ant-design/icons'\r\nimport { useLocation, useHistory, NavLink } from 'react-router-dom'\r\nimport { findSelectedKey, items } from './navbar-keys-helpers'\r\nimport { useAuthentication } from '../../utils/useAuthentication'\r\nimport { authService } from '../../store/services/AuthenticationService'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nexport const Navbar: React.FC = () => {\r\n  // TODO useLocation type !!\r\n  const { logout } = useAuthentication()\r\n  const location: any = useLocation()\r\n  const history = useHistory()\r\n  const [selectedKey, setSelectedKey] = React.useState(\r\n    findSelectedKey(items, location)\r\n  )\r\n\r\n  const { i18n, t } = useTranslation()\r\n\r\n  const logoutHandler = () => {\r\n    logout()\r\n  }\r\n\r\n  const changeLanguageHandler = (language: string) => {\r\n    i18n.changeLanguage(language)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    setSelectedKey(findSelectedKey(items, location))\r\n  }, [location])\r\n\r\n  return (\r\n    <div style={{ display: 'flex' }}>\r\n      <Menu mode='horizontal' selectedKeys={[selectedKey!]}>\r\n        <Menu.Item\r\n          key='return'\r\n          icon={<ArrowLeftOutlined />}\r\n          onClick={() => history.goBack()}\r\n        >\r\n          {t('Назад')}\r\n        </Menu.Item>\r\n        {items.map((_item) => (\r\n          <Menu.Item key={_item.key}>\r\n            <NavLink to={_item.path}>{t(_item.label)}</NavLink>\r\n          </Menu.Item>\r\n        ))}\r\n        {authService.authenticationStatus ? (\r\n          <Menu.Item\r\n            key='logout'\r\n            icon={<ArrowLeftOutlined />}\r\n            onClick={logoutHandler}\r\n          >\r\n            {t('Выход')}\r\n          </Menu.Item>\r\n        ) : null}\r\n        <Button onClick={() => changeLanguageHandler('en')}>EN</Button>\r\n        <Button onClick={() => changeLanguageHandler('ru')}>RU</Button>\r\n      </Menu>\r\n    </div>\r\n  )\r\n}\r\n","D:\\Projects\\auto-crm\\client\\src\\components\\NothingWasFetched\\NothingWasFetched.tsx",[],["328","329"],"D:\\Projects\\auto-crm\\client\\src\\utils\\useMessages.ts",[],"D:\\Projects\\auto-crm\\client\\src\\components\\ListLength\\ListLength.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\store\\reducers\\error_Reducer.ts",["330"],"import { ThunkAction } from 'redux-thunk'\r\nimport { ActionsTypes } from '../types/rootActionsType'\r\nimport { RootAppState } from '../../store'\r\nimport { errorType } from '../types/errorReducer.types'\r\n\r\nconst initialState = {\r\n  error: null as errorType,\r\n}\r\n\r\ntype initialStateType = typeof initialState\r\n\r\n// base thunk type\r\ntype ThunkType = ThunkAction<Promise<void>, RootAppState, unknown, ActionsTypes>\r\n\r\nexport const errorReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): initialStateType => {\r\n  switch (action.type) {\r\n    case 'acrm/errors/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      }\r\n    case 'acrm/errors/CLEAR_ERROR':\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const actions = {\r\n  setError: (error: errorType) =>\r\n    ({\r\n      type: 'acrm/errors/SET_ERROR',\r\n      payload: error,\r\n    } as const),\r\n  clearError: () =>\r\n    ({\r\n      type: 'acrm/errors/CLEAR_ERROR',\r\n    } as const),\r\n}\r\n","D:\\Projects\\auto-crm\\client\\src\\utils\\useNewCase.ts",["331","332","333"],"D:\\Projects\\auto-crm\\client\\src\\layouts\\PricesLayout\\PricesLayout.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\components\\PricesSearch\\PricesSearch.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\store\\reducers\\completedCase_Reducer.ts",[],"D:\\Projects\\auto-crm\\client\\src\\store\\api\\completed-cases.api.ts",[],"D:\\Projects\\auto-crm\\client\\src\\components\\Pricelist\\Pricelist.tsx",["334"],"D:\\Projects\\auto-crm\\client\\src\\store\\services\\PricelistService.ts",[],["335","336"],"D:\\Projects\\auto-crm\\client\\src\\components\\Pricelist\\PricelistItem\\PricelistItem.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\store\\api\\pricelist-api.ts",[],"D:\\Projects\\auto-crm\\client\\src\\components\\Pricelist\\pricelist-table-config.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\store\\services\\AppService.ts",[],"D:\\Projects\\auto-crm\\client\\src\\utils\\usePricelist.ts",["337"],"import React from 'react'\r\nimport { pricelistService } from '../store/services/PricelistService'\r\nimport {\r\n  priceListItemType,\r\n  tableItemListType,\r\n} from '../store/types/pricesService.types'\r\nimport { formatedPrice } from '../utils/dineroHelpers'\r\n\r\nexport const usePricelist = (): any => {\r\n  const [pricelist, setPricelist] = React.useState<tableItemListType>()\r\n\r\n  const createTableData = () => {\r\n    // TODO ITEM TYPE INCOMPARABLE\r\n    const data: any = pricelistService.priceslist.map(\r\n      (item: priceListItemType, index: number) => {\r\n        return {\r\n          key: item!._id,\r\n          order: index + 1,\r\n          position: item!.text,\r\n          price: formatedPrice(item!.price),\r\n        }\r\n      }\r\n    )\r\n    setPricelist(data)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (pricelistService.pricelistLength) {\r\n      return\r\n    }\r\n    pricelistService.getAllPricelistFromDB()\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    createTableData()\r\n  }, [pricelistService.priceslist])\r\n\r\n  return { pricelist }\r\n}\r\n","D:\\Projects\\auto-crm\\client\\src\\utils\\FuseSearch.ts",[],"D:\\Projects\\auto-crm\\client\\src\\layouts\\CostsLayout\\CostsLayout.tsx",["338","339"],"import { FC, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport { CostsList } from '../../components/CostsList/CostsList'\r\nimport { CreateCostsCard } from '../../components/CreateCostsCard/CreateCostsCard'\r\nimport { Loader } from '../../components/Loader/Loader'\r\nimport { PricelistSelect } from '../../components/PricelistSelect/PricelistSelect'\r\nimport { RootAppState } from '../../store'\r\nimport { getCaseDetails } from '../../store/reducers/case_Reducer'\r\nimport { currentCaseSelector, loadingSelector } from '../../store/selectors'\r\nimport { costsService } from '../../store/services/CostsService'\r\n\r\ntype Params = {\r\n  _id: string\r\n}\r\n\r\nexport const CostsLayout: FC = () => {\r\n  const currentCase = useSelector((state: RootAppState) =>\r\n    currentCaseSelector(state)\r\n  )\r\n  const loading = useSelector((state: RootAppState) => loadingSelector(state))\r\n  const { _id }: Params = useParams()\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (currentCase._id === _id) {\r\n      return\r\n    }\r\n    dispatch(getCaseDetails(_id))\r\n  }, [_id])\r\n\r\n  if (loading) {\r\n    return <Loader />\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n      <CreateCostsCard currentCase={currentCase} />\r\n      <PricelistSelect currentCase={currentCase} />\r\n      <CostsList _id={_id} currentCase={currentCase} />\r\n    </div>\r\n  )\r\n}\r\n","D:\\Projects\\auto-crm\\client\\src\\components\\CreateCostsCard\\CreateCostsCard.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\components\\CostsList\\CostsList.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\store\\services\\CostsService.ts",[],"D:\\Projects\\auto-crm\\client\\src\\components\\PricelistSelect\\PricelistSelect.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\utils\\usePricelistSelection.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\utils\\dineroHelpers.ts",[],"D:\\Projects\\auto-crm\\client\\src\\store\\api\\costs-api.ts",[],"D:\\Projects\\auto-crm\\client\\src\\utils\\useCostsList.tsx",["340"],"D:\\Projects\\auto-crm\\client\\src\\components\\Authentication\\LoginForm\\LoginForm.tsx",["341","342"],"import { FC, useRef } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport { Form, Input, Button } from 'antd'\r\nimport { layout, tailLayout } from '../form-config'\r\nimport { authService } from '../../../store/services/AuthenticationService'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useAuthentication } from '../../../utils/useAuthentication'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\ntype Values = {\r\n  userId: string\r\n  password: string\r\n}\r\n\r\nexport const LoginForm: FC = observer(() => {\r\n  const { login } = useAuthentication()\r\n  const { t } = useTranslation()\r\n  const history = useHistory()\r\n  const form = useRef<any>()\r\n  const onFinish = (values: Values) => {\r\n    login(values.userId, values.password)\r\n\r\n    form.current.resetFields()\r\n  }\r\n\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log('Failed:', errorInfo)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        {...layout}\r\n        ref={form}\r\n        name='basic'\r\n        initialValues={{ remember: true }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        style={{ marginTop: '100px' }}\r\n      >\r\n        <Form.Item\r\n          label='ID'\r\n          name='userId'\r\n          rules={[{ required: true, message: 'Please input your username!' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t('Пароль')}\r\n          name='password'\r\n          rules={[{ required: true, message: 'Please input your password!' }]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailLayout}>\r\n          <Button type='primary' htmlType='submit'>\r\n            {t('Войти')}\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  )\r\n})\r\n","D:\\Projects\\auto-crm\\client\\src\\layouts\\AuthLayout\\AuthLayout.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\utils\\ProtectedRoute.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\store\\services\\AuthenticationService.ts",["343"],"import { makeObservable, observable, action } from 'mobx'\r\nimport { authAPI } from '../api/auth-api'\r\nimport Cookies from 'js-cookie'\r\nimport jwt from 'jsonwebtoken'\r\nimport { tokenToString } from 'typescript'\r\n\r\nclass AuthenticationService {\r\n  _isAuthenticated: boolean = false\r\n  _acrmvaltoken: string | null = null\r\n\r\n  constructor() {\r\n    makeObservable(this, {\r\n      _isAuthenticated: observable,\r\n      setAuthenticationStatus: action,\r\n      authenticate: action,\r\n      setToken: action,\r\n    })\r\n  }\r\n\r\n  // field getters\r\n  get authenticationStatus() {\r\n    return this._isAuthenticated\r\n  }\r\n\r\n  // actions\r\n\r\n  setAuthenticationStatus() {\r\n    this._isAuthenticated = true\r\n  }\r\n\r\n  authenticationStatusFalse() {\r\n    this._isAuthenticated = false\r\n  }\r\n\r\n  setToken(token: string) {\r\n    Cookies.set('acrmvaltoken', token)\r\n  }\r\n\r\n  clearToken() {\r\n    Cookies.remove('acrmvaltoken')\r\n  }\r\n\r\n  async authenticate(userId: string, password: string) {\r\n    try {\r\n      const acrmvaltoken = await authAPI.login(userId, password)\r\n\r\n      if (acrmvaltoken) {\r\n        this.setToken(acrmvaltoken)\r\n        this.setAuthenticationStatus()\r\n      }\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n\r\n  async logout() {\r\n    try {\r\n      this.clearToken()\r\n      this.authenticationStatusFalse()\r\n    } catch (error) {}\r\n  }\r\n\r\n  async verifyAuthentication() {\r\n    const acrmvaltoken = Cookies.get('acrmvaltoken')\r\n    let token: any\r\n\r\n    if (!acrmvaltoken) {\r\n      this.authenticationStatusFalse()\r\n      return\r\n    }\r\n\r\n    try {\r\n      token = jwt.verify(acrmvaltoken!, 'acrmsecretkey')\r\n\r\n      if (token) {\r\n        this.setAuthenticationStatus()\r\n      }\r\n    } catch (TokenExpiredError) {\r\n      Cookies.remove('acrmvaltoken')\r\n      this.authenticationStatusFalse()\r\n    }\r\n  }\r\n}\r\n\r\nexport const authService = new AuthenticationService()\r\n","D:\\Projects\\auto-crm\\client\\src\\store\\api\\auth-api.ts",[],"D:\\Projects\\auto-crm\\client\\src\\utils\\useAuthentication.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\localization\\i18n.ts",[],"D:\\Projects\\auto-crm\\client\\src\\components\\SideMenu\\SideMenu.tsx",["344","345"],"D:\\Projects\\auto-crm\\client\\src\\components\\Navbar\\navbar-keys-helpers.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\components\\Authentication\\form-config.ts",[],"D:\\Projects\\auto-crm\\client\\src\\components\\DateTime\\DateTime.tsx",[],{"ruleId":"346","replacedBy":"347"},{"ruleId":"348","replacedBy":"349"},{"ruleId":"350","severity":1,"message":"351","line":3,"column":10,"nodeType":"352","messageId":"353","endLine":3,"endColumn":14},{"ruleId":"350","severity":1,"message":"354","line":7,"column":7,"nodeType":"352","messageId":"353","endLine":7,"endColumn":37},{"ruleId":"346","replacedBy":"355"},{"ruleId":"348","replacedBy":"356"},{"ruleId":"346","replacedBy":"357"},{"ruleId":"348","replacedBy":"358"},{"ruleId":"346","replacedBy":"359"},{"ruleId":"348","replacedBy":"360"},{"ruleId":"361","severity":1,"message":"362","line":34,"column":6,"nodeType":"363","endLine":34,"endColumn":8,"suggestions":"364"},{"ruleId":"346","replacedBy":"365"},{"ruleId":"348","replacedBy":"366"},{"ruleId":"350","severity":1,"message":"367","line":13,"column":10,"nodeType":"352","messageId":"353","endLine":13,"endColumn":16},{"ruleId":"361","severity":1,"message":"368","line":31,"column":6,"nodeType":"363","endLine":31,"endColumn":8,"suggestions":"369"},{"ruleId":"350","severity":1,"message":"370","line":2,"column":10,"nodeType":"352","messageId":"353","endLine":2,"endColumn":15},{"ruleId":"361","severity":1,"message":"371","line":45,"column":6,"nodeType":"363","endLine":45,"endColumn":13,"suggestions":"372"},{"ruleId":"361","severity":1,"message":"373","line":30,"column":6,"nodeType":"363","endLine":30,"endColumn":8,"suggestions":"374"},{"ruleId":"375","severity":1,"message":"376","line":35,"column":37,"nodeType":"377","messageId":"378","endLine":35,"endColumn":39},{"ruleId":"346","replacedBy":"379"},{"ruleId":"348","replacedBy":"380"},{"ruleId":"350","severity":1,"message":"381","line":9,"column":3,"nodeType":"352","messageId":"353","endLine":9,"endColumn":16},{"ruleId":"350","severity":1,"message":"382","line":11,"column":21,"nodeType":"352","messageId":"353","endLine":11,"endColumn":42},{"ruleId":"361","severity":1,"message":"362","line":34,"column":6,"nodeType":"363","endLine":34,"endColumn":8,"suggestions":"383"},{"ruleId":"350","severity":1,"message":"384","line":1,"column":28,"nodeType":"352","messageId":"353","endLine":1,"endColumn":36},{"ruleId":"361","severity":1,"message":"362","line":34,"column":6,"nodeType":"363","endLine":34,"endColumn":8,"suggestions":"385"},{"ruleId":"361","severity":1,"message":"386","line":28,"column":6,"nodeType":"363","endLine":28,"endColumn":8,"suggestions":"387"},{"ruleId":"346","replacedBy":"388"},{"ruleId":"348","replacedBy":"389"},{"ruleId":"350","severity":1,"message":"390","line":2,"column":24,"nodeType":"352","messageId":"353","endLine":2,"endColumn":27},{"ruleId":"346","replacedBy":"391"},{"ruleId":"348","replacedBy":"392"},{"ruleId":"350","severity":1,"message":"393","line":13,"column":6,"nodeType":"352","messageId":"353","endLine":13,"endColumn":15},{"ruleId":"350","severity":1,"message":"394","line":13,"column":11,"nodeType":"352","messageId":"353","endLine":13,"endColumn":25},{"ruleId":"350","severity":1,"message":"395","line":14,"column":9,"nodeType":"352","messageId":"353","endLine":14,"endColumn":16},{"ruleId":"361","severity":1,"message":"396","line":30,"column":6,"nodeType":"363","endLine":30,"endColumn":23,"suggestions":"397"},{"ruleId":"361","severity":1,"message":"398","line":18,"column":6,"nodeType":"363","endLine":18,"endColumn":30,"suggestions":"399"},{"ruleId":"346","replacedBy":"400"},{"ruleId":"348","replacedBy":"401"},{"ruleId":"361","severity":1,"message":"402","line":36,"column":6,"nodeType":"363","endLine":36,"endColumn":35,"suggestions":"403"},{"ruleId":"350","severity":1,"message":"404","line":11,"column":10,"nodeType":"352","messageId":"353","endLine":11,"endColumn":22},{"ruleId":"361","severity":1,"message":"405","line":30,"column":6,"nodeType":"363","endLine":30,"endColumn":11,"suggestions":"406"},{"ruleId":"361","severity":1,"message":"407","line":19,"column":6,"nodeType":"363","endLine":19,"endColumn":8,"suggestions":"408"},{"ruleId":"350","severity":1,"message":"409","line":5,"column":10,"nodeType":"352","messageId":"353","endLine":5,"endColumn":21},{"ruleId":"350","severity":1,"message":"395","line":18,"column":9,"nodeType":"352","messageId":"353","endLine":18,"endColumn":16},{"ruleId":"350","severity":1,"message":"410","line":5,"column":10,"nodeType":"352","messageId":"353","endLine":5,"endColumn":23},{"ruleId":"350","severity":1,"message":"411","line":2,"column":16,"nodeType":"352","messageId":"353","endLine":2,"endColumn":22},{"ruleId":"350","severity":1,"message":"412","line":2,"column":24,"nodeType":"352","messageId":"353","endLine":2,"endColumn":31},"no-native-reassign",["413"],"no-negated-in-lhs",["414"],"@typescript-eslint/no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'gridStyle' is assigned a value but never used.",["413"],["414"],["413"],["414"],["413"],["414"],"react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'dispatch', 'error', and 'errorMessage'. Either include them or remove the dependency array.","ArrayExpression",["415"],["413"],["414"],"'Navbar' is defined but never used.","React Hook useEffect has a missing dependency: 'verification'. Either include it or remove the dependency array.",["416"],"'match' is defined but never used.","React Hook React.useEffect has missing dependencies: 'dispatch' and 'errorMessage'. Either include them or remove the dependency array.",["417"],"React Hook React.useEffect has missing dependencies: '_id', 'currentEditedCase._id', and 'dispatch'. Either include them or remove the dependency array.",["418"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["413"],["414"],"'separateCases' is defined but never used.","'caseInProgressActions' is defined but never used.",["419"],"'caseType' is defined but never used.",["420"],"React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["421"],["413"],["414"],"'Row' is defined but never used.",["413"],["414"],"'ThunkType' is defined but never used.","'successMessage' is assigned a value but never used.","'history' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'errorMessage'. Either include it or remove the dependency array.",["422"],"React Hook React.useEffect has an unnecessary dependency: 'fuse.searchQueryGetter'. Either exclude it or remove the dependency array. Outer scope values like 'fuse.searchQueryGetter' aren't valid dependencies because mutating them doesn't re-render the component.",["423"],["413"],["414"],"React Hook React.useEffect has an unnecessary dependency: 'pricelistService.priceslist'. Either exclude it or remove the dependency array. Outer scope values like 'pricelistService.priceslist' aren't valid dependencies because mutating them doesn't re-render the component.",["424"],"'costsService' is defined but never used.","React Hook useEffect has missing dependencies: 'currentCase._id' and 'dispatch'. Either include them or remove the dependency array.",["425"],"React Hook useEffect has a missing dependency: 'currentCase._id'. Either include it or remove the dependency array.",["426"],"'authService' is defined but never used.","'tokenToString' is defined but never used.","'Button' is defined but never used.","'Divider' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},{"desc":"427","fix":"431"},{"desc":"432","fix":"433"},{"desc":"427","fix":"434"},{"desc":"427","fix":"435"},{"desc":"436","fix":"437"},{"desc":"438","fix":"439"},{"desc":"440","fix":"441"},{"desc":"440","fix":"442"},{"desc":"443","fix":"444"},{"desc":"445","fix":"446"},"Update the dependencies array to be: [dispatch, error, errorMessage]",{"range":"447","text":"448"},"Update the dependencies array to be: [verification]",{"range":"449","text":"450"},{"range":"451","text":"448"},"Update the dependencies array to be: [_id, currentEditedCase._id, dispatch]",{"range":"452","text":"453"},{"range":"454","text":"448"},{"range":"455","text":"448"},"Update the dependencies array to be: [dispatch]",{"range":"456","text":"457"},"Update the dependencies array to be: [error, dispatch, errorMessage]",{"range":"458","text":"459"},"Update the dependencies array to be: []",{"range":"460","text":"461"},{"range":"462","text":"461"},"Update the dependencies array to be: [_id, currentCase._id, dispatch]",{"range":"463","text":"464"},"Update the dependencies array to be: [currentCase._id]",{"range":"465","text":"466"},[1315,1317],"[dispatch, error, errorMessage]",[1505,1507],"[verification]",[1640,1647],[949,951],"[_id, currentEditedCase._id, dispatch]",[1383,1385],[1376,1378],[955,957],"[dispatch]",[952,969],"[error, dispatch, errorMessage]",[675,699],"[]",[969,998],[1137,1142],"[_id, currentCase._id, dispatch]",[675,677],"[currentCase._id]"]