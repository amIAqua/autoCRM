[{"D:\\Projects\\auto-crm\\client\\src\\index.tsx":"1","D:\\Projects\\auto-crm\\client\\src\\components\\SpecifyCards\\SpecifyCards.tsx":"2","D:\\Projects\\auto-crm\\client\\src\\components\\AddNewClientForm\\AddNewClientForm.tsx":"3","D:\\Projects\\auto-crm\\client\\src\\store\\api\\cases-api.ts":"4","D:\\Projects\\auto-crm\\client\\src\\layouts\\SpecifyLayout\\SpecifyLayout.tsx":"5","D:\\Projects\\auto-crm\\client\\src\\store.ts":"6","D:\\Projects\\auto-crm\\client\\src\\layouts\\NewClientLayout\\NewClientLayout.tsx":"7","D:\\Projects\\auto-crm\\client\\src\\store\\api\\axios.config.ts":"8","D:\\Projects\\auto-crm\\client\\src\\layouts\\CasesLayout\\CasesLayout.tsx":"9","D:\\Projects\\auto-crm\\client\\src\\components\\AllCasesList\\AllCasesList.tsx":"10","D:\\Projects\\auto-crm\\client\\src\\store\\selectors.ts":"11","D:\\Projects\\auto-crm\\client\\src\\components\\AllCasesList\\CasesListItem\\CasesListItem.tsx":"12","D:\\Projects\\auto-crm\\client\\src\\App.tsx":"13","D:\\Projects\\auto-crm\\client\\src\\layouts\\DetailCaseLayout\\DetailCaseLayout.tsx":"14","D:\\Projects\\auto-crm\\client\\src\\components\\DetailCaseCard\\DetailCaseCard.tsx":"15","D:\\Projects\\auto-crm\\client\\src\\utils\\name_utils.ts":"16","D:\\Projects\\auto-crm\\client\\src\\layouts\\EditCaseLayout\\EditCaseLayout.tsx":"17","D:\\Projects\\auto-crm\\client\\src\\components\\EditCurrentCaseForm\\EditCurrentCaseForm.tsx":"18","D:\\Projects\\auto-crm\\client\\src\\utils\\helpers.ts":"19","D:\\Projects\\auto-crm\\client\\src\\store\\reducers\\app_Reducer.ts":"20","D:\\Projects\\auto-crm\\client\\src\\components\\AddNewClientForm\\case-form-config.ts":"21","D:\\Projects\\auto-crm\\client\\src\\store\\reducers\\case_Reducer.ts":"22","D:\\Projects\\auto-crm\\client\\src\\layouts\\CasesInProgress\\CasesInProgressLayout.tsx":"23","D:\\Projects\\auto-crm\\client\\src\\store\\api\\cases-in-progress-api.ts":"24","D:\\Projects\\auto-crm\\client\\src\\store\\reducers\\caseInProgress_reducer.ts":"25","D:\\Projects\\auto-crm\\client\\src\\layouts\\CompletedCasesLayout\\CompletedCasesLayout.tsx":"26","D:\\Projects\\auto-crm\\client\\src\\utils\\useContainElements.ts":"27","D:\\Projects\\auto-crm\\client\\src\\reportWebVitals.ts":"28","D:\\Projects\\auto-crm\\client\\src\\components\\FormFields\\form-fields.tsx":"29","D:\\Projects\\auto-crm\\client\\src\\components\\Loader\\Loader.tsx":"30","D:\\Projects\\auto-crm\\client\\src\\components\\Navbar\\Navbar.tsx":"31","D:\\Projects\\auto-crm\\client\\src\\components\\NothingWasFetched\\NothingWasFetched.tsx":"32","D:\\Projects\\auto-crm\\client\\src\\utils\\useMessages.ts":"33","D:\\Projects\\auto-crm\\client\\src\\components\\ListLength\\ListLength.tsx":"34","D:\\Projects\\auto-crm\\client\\src\\store\\reducers\\error_Reducer.ts":"35","D:\\Projects\\auto-crm\\client\\src\\utils\\useNewCase.ts":"36","D:\\Projects\\auto-crm\\client\\src\\layouts\\PricesLayout\\PricesLayout.tsx":"37","D:\\Projects\\auto-crm\\client\\src\\components\\PricesSearch\\PricesSearch.tsx":"38","D:\\Projects\\auto-crm\\client\\src\\store\\reducers\\completedCase_Reducer.ts":"39","D:\\Projects\\auto-crm\\client\\src\\store\\api\\completed-cases.api.ts":"40","D:\\Projects\\auto-crm\\client\\src\\components\\Pricelist\\Pricelist.tsx":"41","D:\\Projects\\auto-crm\\client\\src\\store\\services\\PricelistService.ts":"42","D:\\Projects\\auto-crm\\client\\src\\components\\Pricelist\\PricelistItem\\PricelistItem.tsx":"43","D:\\Projects\\auto-crm\\client\\src\\store\\api\\pricelist-api.ts":"44","D:\\Projects\\auto-crm\\client\\src\\components\\Pricelist\\pricelist-table-config.tsx":"45","D:\\Projects\\auto-crm\\client\\src\\store\\services\\AppService.ts":"46","D:\\Projects\\auto-crm\\client\\src\\utils\\usePricelist.ts":"47","D:\\Projects\\auto-crm\\client\\src\\utils\\FuseSearch.ts":"48","D:\\Projects\\auto-crm\\client\\src\\layouts\\CostsLayout\\CostsLayout.tsx":"49","D:\\Projects\\auto-crm\\client\\src\\components\\CreateCostsCard\\CreateCostsCard.tsx":"50","D:\\Projects\\auto-crm\\client\\src\\components\\CostsList\\CostsList.tsx":"51","D:\\Projects\\auto-crm\\client\\src\\store\\services\\CostsService.ts":"52","D:\\Projects\\auto-crm\\client\\src\\components\\PricelistSelect\\PricelistSelect.tsx":"53","D:\\Projects\\auto-crm\\client\\src\\utils\\usePricelistSelection.tsx":"54","D:\\Projects\\auto-crm\\client\\src\\utils\\dineroHelpers.ts":"55","D:\\Projects\\auto-crm\\client\\src\\store\\api\\costs-api.ts":"56","D:\\Projects\\auto-crm\\client\\src\\utils\\useCostsList.tsx":"57","D:\\Projects\\auto-crm\\client\\src\\components\\Authentication\\LoginForm\\LoginForm.tsx":"58","D:\\Projects\\auto-crm\\client\\src\\layouts\\AuthLayout\\AuthLayout.tsx":"59","D:\\Projects\\auto-crm\\client\\src\\utils\\ProtectedRoute.tsx":"60","D:\\Projects\\auto-crm\\client\\src\\store\\services\\AuthenticationService.ts":"61","D:\\Projects\\auto-crm\\client\\src\\store\\api\\auth-api.ts":"62","D:\\Projects\\auto-crm\\client\\src\\utils\\useAuthentication.tsx":"63","D:\\Projects\\auto-crm\\client\\src\\localization\\i18n.ts":"64","D:\\Projects\\auto-crm\\client\\src\\components\\SideMenu\\SideMenu.tsx":"65"},{"size":729,"mtime":1612795136123,"results":"66","hashOfConfig":"67"},{"size":1893,"mtime":1612796388979,"results":"68","hashOfConfig":"67"},{"size":5832,"mtime":1612797775764,"results":"69","hashOfConfig":"67"},{"size":968,"mtime":1611844527421,"results":"70","hashOfConfig":"67"},{"size":348,"mtime":1611789428546,"results":"71","hashOfConfig":"67"},{"size":996,"mtime":1611842194689,"results":"72","hashOfConfig":"67"},{"size":237,"mtime":1611426122319,"results":"73","hashOfConfig":"67"},{"size":228,"mtime":1610630955972,"results":"74","hashOfConfig":"67"},{"size":1725,"mtime":1611790106672,"results":"75","hashOfConfig":"67"},{"size":444,"mtime":1611335652069,"results":"76","hashOfConfig":"67"},{"size":1138,"mtime":1611776206247,"results":"77","hashOfConfig":"67"},{"size":1445,"mtime":1612802904628,"results":"78","hashOfConfig":"67"},{"size":2774,"mtime":1612875110445,"results":"79","hashOfConfig":"67"},{"size":2779,"mtime":1612805417903,"results":"80","hashOfConfig":"67"},{"size":5592,"mtime":1612804316999,"results":"81","hashOfConfig":"67"},{"size":87,"mtime":1612280840496,"results":"82","hashOfConfig":"67"},{"size":1115,"mtime":1611789323692,"results":"83","hashOfConfig":"67"},{"size":6566,"mtime":1612805959995,"results":"84","hashOfConfig":"67"},{"size":1699,"mtime":1611773508098,"results":"85","hashOfConfig":"67"},{"size":843,"mtime":1611533548609,"results":"86","hashOfConfig":"67"},{"size":711,"mtime":1612204609070,"results":"87","hashOfConfig":"67"},{"size":4784,"mtime":1612210671349,"results":"88","hashOfConfig":"67"},{"size":1821,"mtime":1611789081904,"results":"89","hashOfConfig":"67"},{"size":440,"mtime":1611844518884,"results":"90","hashOfConfig":"67"},{"size":2736,"mtime":1611777353511,"results":"91","hashOfConfig":"67"},{"size":1810,"mtime":1611789205014,"results":"92","hashOfConfig":"67"},{"size":1008,"mtime":1611777456149,"results":"93","hashOfConfig":"67"},{"size":425,"mtime":1609346309311,"results":"94","hashOfConfig":"67"},{"size":429,"mtime":1611331008780,"results":"95","hashOfConfig":"67"},{"size":121,"mtime":1611426140495,"results":"96","hashOfConfig":"67"},{"size":1950,"mtime":1612874034026,"results":"97","hashOfConfig":"67"},{"size":320,"mtime":1612803533011,"results":"98","hashOfConfig":"67"},{"size":328,"mtime":1611405585328,"results":"99","hashOfConfig":"67"},{"size":342,"mtime":1612803416053,"results":"100","hashOfConfig":"67"},{"size":1040,"mtime":1611678196872,"results":"101","hashOfConfig":"67"},{"size":1009,"mtime":1611772988334,"results":"102","hashOfConfig":"67"},{"size":305,"mtime":1611843161128,"results":"103","hashOfConfig":"67"},{"size":753,"mtime":1612873736706,"results":"104","hashOfConfig":"67"},{"size":2484,"mtime":1611778066171,"results":"105","hashOfConfig":"67"},{"size":484,"mtime":1611844583490,"results":"106","hashOfConfig":"67"},{"size":1067,"mtime":1612873580017,"results":"107","hashOfConfig":"67"},{"size":1312,"mtime":1612193114691,"results":"108","hashOfConfig":"67"},{"size":626,"mtime":1611937170130,"results":"109","hashOfConfig":"67"},{"size":280,"mtime":1611844581281,"results":"110","hashOfConfig":"67"},{"size":690,"mtime":1612873526057,"results":"111","hashOfConfig":"67"},{"size":509,"mtime":1611941663514,"results":"112","hashOfConfig":"67"},{"size":1030,"mtime":1612381290625,"results":"113","hashOfConfig":"67"},{"size":1414,"mtime":1611959458863,"results":"114","hashOfConfig":"67"},{"size":1454,"mtime":1612297796345,"results":"115","hashOfConfig":"67"},{"size":884,"mtime":1612872236773,"results":"116","hashOfConfig":"67"},{"size":2408,"mtime":1612872440794,"results":"117","hashOfConfig":"67"},{"size":4278,"mtime":1612612777698,"results":"118","hashOfConfig":"67"},{"size":1222,"mtime":1612872788998,"results":"119","hashOfConfig":"67"},{"size":1185,"mtime":1612872720151,"results":"120","hashOfConfig":"67"},{"size":333,"mtime":1612191449422,"results":"121","hashOfConfig":"67"},{"size":691,"mtime":1612298039790,"results":"122","hashOfConfig":"67"},{"size":1679,"mtime":1612284027143,"results":"123","hashOfConfig":"67"},{"size":1768,"mtime":1612803797851,"results":"124","hashOfConfig":"67"},{"size":208,"mtime":1612442371328,"results":"125","hashOfConfig":"67"},{"size":591,"mtime":1612445668151,"results":"126","hashOfConfig":"67"},{"size":1866,"mtime":1612611280442,"results":"127","hashOfConfig":"67"},{"size":270,"mtime":1612450686057,"results":"128","hashOfConfig":"67"},{"size":667,"mtime":1612556993773,"results":"129","hashOfConfig":"67"},{"size":403,"mtime":1612795020148,"results":"130","hashOfConfig":"67"},{"size":3031,"mtime":1612877710368,"results":"131","hashOfConfig":"67"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},"19gd3h2",{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"134"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"134"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"134"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"134"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"134"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"141"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"134"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"141"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"134"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"134"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"264","messages":"265","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"134"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\auto-crm\\client\\src\\index.tsx",[],["281","282"],"D:\\Projects\\auto-crm\\client\\src\\components\\SpecifyCards\\SpecifyCards.tsx",["283","284"],"D:\\Projects\\auto-crm\\client\\src\\components\\AddNewClientForm\\AddNewClientForm.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\store\\api\\cases-api.ts",[],["285","286"],"D:\\Projects\\auto-crm\\client\\src\\layouts\\SpecifyLayout\\SpecifyLayout.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\store.ts",[],"D:\\Projects\\auto-crm\\client\\src\\layouts\\NewClientLayout\\NewClientLayout.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\store\\api\\axios.config.ts",[],["287","288"],"D:\\Projects\\auto-crm\\client\\src\\layouts\\CasesLayout\\CasesLayout.tsx",["289"],"import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { RootAppState } from '../../store'\r\nimport { getAllCases } from '../../store/reducers/case_Reducer'\r\nimport { AllCasesList } from '../../components/AllCasesList/AllCasesList'\r\nimport { Loader } from '../../components/Loader/Loader'\r\nimport { NothingWasFetched } from '../../components/NothingWasFetched/NothingWasFetched'\r\nimport { allCasesListType } from '../../store/types/casesReducer.types'\r\nimport { ListLength } from '../../components/ListLength/ListLength'\r\nimport { useMessages } from '../../utils/useMessages'\r\nimport { clearError } from '../../utils/helpers'\r\nimport {\r\n  casesSelector,\r\n  errorsSelector,\r\n  loadingSelector,\r\n} from '../../store/selectors'\r\n\r\nexport const CasesLayout: React.FC = () => {\r\n  const loading = useSelector((state: RootAppState) => loadingSelector(state))\r\n  const error = useSelector((state: RootAppState) => errorsSelector(state))\r\n  const allCasesList: allCasesListType = useSelector((state: RootAppState) =>\r\n    casesSelector(state)\r\n  )\r\n  const { errorMessage } = useMessages()\r\n  const dispatch = useDispatch()\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getAllCases())\r\n\r\n    if (error) {\r\n      errorMessage(error.message)\r\n    }\r\n    return () => clearError(dispatch)\r\n  }, [])\r\n\r\n  if (error) return <NothingWasFetched />\r\n\r\n  if (!allCasesList.length && !loading) return <NothingWasFetched />\r\n\r\n  return (\r\n    <div>\r\n      <div className='content-section'>\r\n        {allCasesList && !loading ? (\r\n          <ListLength length={allCasesList.length} />\r\n        ) : null}\r\n        {loading ? <Loader /> : <AllCasesList allCases={allCasesList} />}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","D:\\Projects\\auto-crm\\client\\src\\components\\AllCasesList\\AllCasesList.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\store\\selectors.ts",[],"D:\\Projects\\auto-crm\\client\\src\\components\\AllCasesList\\CasesListItem\\CasesListItem.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\App.tsx",["290","291"],"D:\\Projects\\auto-crm\\client\\src\\layouts\\DetailCaseLayout\\DetailCaseLayout.tsx",["292","293"],"import React from 'react'\r\nimport { match, useHistory, useParams } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { DetailCaseCard } from '../../components/DetailCaseCard/DetailCaseCard'\r\nimport { RootAppState } from '../../store'\r\nimport { deleteCase, getCaseDetails } from '../../store/reducers/case_Reducer'\r\nimport { Loader } from '../../components/Loader/Loader'\r\nimport { takeCaseInProgress } from '../../store/reducers/caseInProgress_reducer'\r\nimport { completeCase } from '../../store/reducers/completedCase_Reducer'\r\nimport { useMessages } from '../../utils/useMessages'\r\nimport { clearError, stopLoading } from '../../utils/helpers'\r\nimport {\r\n  currentCaseSelector,\r\n  errorsSelector,\r\n  loadingSelector,\r\n} from '../../store/selectors'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\ntype Params = {\r\n  _id: string\r\n}\r\n\r\nexport const DetailCaseLayout: React.FC = () => {\r\n  const loading = useSelector((state: RootAppState) => loadingSelector(state))\r\n  const error = useSelector((state: RootAppState) => errorsSelector(state))\r\n  const currentCaseDetails = useSelector((state: RootAppState) =>\r\n    currentCaseSelector(state)\r\n  )\r\n  const { successMessage, errorMessage } = useMessages()\r\n  const { t } = useTranslation()\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const { _id }: Params = useParams()\r\n\r\n  React.useEffect((): any => {\r\n    dispatch(getCaseDetails(_id))\r\n  }, [dispatch, _id])\r\n\r\n  React.useEffect(() => {\r\n    if (error) {\r\n      stopLoading(dispatch)\r\n      errorMessage(error.message)\r\n    }\r\n    return () => clearError(dispatch)\r\n  }, [error])\r\n\r\n  const returnRoute = (route: string) => history.push(route)\r\n\r\n  const returnAndSuccess = (message: string) => {\r\n    return setTimeout(() => {\r\n      returnRoute('/specify')\r\n      successMessage(message)\r\n    }, 500)\r\n  }\r\n\r\n  const deleteItemHandler = (_id: string) => {\r\n    dispatch(deleteCase(_id))\r\n\r\n    returnAndSuccess(t('Заявка была удалена успешно'))\r\n  }\r\n\r\n  const takeInProgressHandler = (_id: string) => {\r\n    dispatch(takeCaseInProgress(_id))\r\n\r\n    returnAndSuccess(t('Заявка переведена в статус выполнения'))\r\n  }\r\n\r\n  const completeCaseHandler = (_id: string) => {\r\n    dispatch(completeCase(_id))\r\n\r\n    returnAndSuccess(t('Заявка переведена в статус выполненных'))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <DetailCaseCard\r\n          item={currentCaseDetails}\r\n          deleteItemHandler={deleteItemHandler}\r\n          takeInProgressHandler={takeInProgressHandler}\r\n          completeCaseHandler={completeCaseHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","D:\\Projects\\auto-crm\\client\\src\\components\\DetailCaseCard\\DetailCaseCard.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\utils\\name_utils.ts",[],"D:\\Projects\\auto-crm\\client\\src\\layouts\\EditCaseLayout\\EditCaseLayout.tsx",["294"],"import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { match } from 'react-router-dom'\r\nimport { currentCaseSelector } from '../../store/selectors'\r\nimport { checkCurrentCaseStatus } from '../../utils/helpers'\r\nimport { RootAppState } from '../../store'\r\nimport { EditCurrentCaseForm } from '../../components/EditCurrentCaseForm/EditCurrentCaseForm'\r\nimport { getCaseDetails } from '../../store/reducers/case_Reducer'\r\n\r\ntype queryParams = {\r\n  _id: string\r\n}\r\n\r\ntype Props = {\r\n  match: match<queryParams>\r\n}\r\n\r\nexport const EditCaseLayout: React.FC<Props> = ({ match }) => {\r\n  const currentEditedCase = useSelector((state: RootAppState) =>\r\n    currentCaseSelector(state)\r\n  )\r\n  const dispatch = useDispatch()\r\n\r\n  // getting params _id\r\n  const _id = match.params._id\r\n\r\n  React.useEffect(() => {\r\n    if (checkCurrentCaseStatus(currentEditedCase._id!, _id)) return\r\n    dispatch(getCaseDetails(_id))\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      {currentEditedCase._id ? (\r\n        <EditCurrentCaseForm currentCase={currentEditedCase} />\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n","D:\\Projects\\auto-crm\\client\\src\\components\\EditCurrentCaseForm\\EditCurrentCaseForm.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\utils\\helpers.ts",["295"],"import { Dispatch } from 'react'\r\nimport { Action } from 'redux'\r\nimport { actions as appActions } from '../store/reducers/app_Reducer'\r\nimport { actions as errorActions } from '../store/reducers/error_Reducer'\r\n\r\nimport { allCasesListType, caseType } from '../store/types/casesReducer.types'\r\n\r\nexport const checkCurrentCaseStatus = (currentCaseId: string, _id: string) =>\r\n  currentCaseId === _id\r\n\r\n// dispatch returner\r\nexport const initializeLoading = (dispatch: Dispatch<Action>) =>\r\n  dispatch(appActions.setLoadingStatus())\r\n\r\nexport const stopLoading = (dispatch: Dispatch<Action>) =>\r\n  dispatch(appActions.removeLoadingStatus())\r\n\r\nexport const clearError = (dispatch: Dispatch<Action>) =>\r\n  dispatch(errorActions.clearError())\r\n\r\n// cases in progress helpers\r\nexport const findCaseInListHelper = (\r\n  allCasesInProgress: allCasesListType,\r\n  _id: string\r\n) => {\r\n  let resultCase = allCasesInProgress.find((item: caseType) => item._id === _id)\r\n  return resultCase\r\n}\r\n\r\nexport const separateCases = (allCasesList: allCasesListType) => {\r\n  const casesInProgressList: allCasesListType = []\r\n  const notProgressedCasesList: allCasesListType = []\r\n  const completedCases: allCasesListType = []\r\n\r\n  allCasesList.map((item: caseType) => {\r\n    if (item.inProgress && !item.completed) {\r\n      casesInProgressList.push(item)\r\n    }\r\n\r\n    if (!item.completed && !item.inProgress) {\r\n      notProgressedCasesList.push(item)\r\n    }\r\n\r\n    if (item.completed && !item.inProgress) {\r\n      completedCases.push(item)\r\n    }\r\n  })\r\n\r\n  return { casesInProgressList, notProgressedCasesList, completedCases }\r\n}\r\n\r\n// date generator\r\n\r\nexport const getDate = () => new Date().toLocaleDateString()\r\n","D:\\Projects\\auto-crm\\client\\src\\store\\reducers\\app_Reducer.ts",[],"D:\\Projects\\auto-crm\\client\\src\\components\\AddNewClientForm\\case-form-config.ts",[],["296","297"],"D:\\Projects\\auto-crm\\client\\src\\store\\reducers\\case_Reducer.ts",["298","299"],"import { caseType, allCasesListType } from '../types/casesReducer.types'\r\nimport { caseAPI } from '../api/cases-api'\r\nimport { RootAppState } from '../../store'\r\nimport { ActionsTypes } from '../types/rootActionsType'\r\nimport { ThunkAction } from 'redux-thunk'\r\nimport {\r\n  initializeLoading,\r\n  stopLoading,\r\n  separateCases,\r\n} from '../../utils/helpers'\r\nimport { actions as caseInProgressActions } from '../reducers/caseInProgress_reducer'\r\nimport { actions as errorActions } from '../reducers/error_Reducer'\r\n\r\nexport const initialState = {\r\n  newCase: {\r\n    ownerInfo: {\r\n      name: '',\r\n      surname: '',\r\n      adress: '',\r\n      contacts: {\r\n        email: '',\r\n        phoneNumber: '',\r\n      },\r\n    },\r\n    autoInfo: {\r\n      brand: '',\r\n      model: '',\r\n      year: '',\r\n      bodyNumber: '',\r\n      engine: {\r\n        volume: '',\r\n        specification: '',\r\n      },\r\n    },\r\n    problems: '',\r\n    result: '',\r\n    navigation: {\r\n      createdDate: '',\r\n      completedDate: '',\r\n      worker: '',\r\n    },\r\n    _id: '',\r\n    inProgress: false,\r\n    completed: false,\r\n    costed: false,\r\n  } as caseType,\r\n  allCasesList: [] as allCasesListType,\r\n}\r\n\r\ntype initialStateType = typeof initialState\r\n\r\n// base thunk type\r\ntype ThunkType = ThunkAction<Promise<void>, RootAppState, unknown, ActionsTypes>\r\n\r\nexport const caseReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): initialStateType => {\r\n  switch (action.type) {\r\n    case 'acrm/cases/SET_ALL_CASES_LIST':\r\n      return {\r\n        ...state,\r\n        allCasesList: action.payload,\r\n      }\r\n    case 'acrm/cases/SET_CURRENT_CASE':\r\n      return {\r\n        ...state,\r\n        newCase: action.payload,\r\n      }\r\n    case 'acrm/cases/CLEAR_CURRENT_CASE':\r\n      return {\r\n        ...state,\r\n        newCase: initialState.newCase,\r\n      }\r\n    case 'acrm/cases/DELETE_CASE':\r\n      return {\r\n        ...state,\r\n        allCasesList: state.allCasesList.filter(\r\n          (item) => item._id !== action.payload\r\n        ),\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// Action creators\r\nexport const actions = {\r\n  setAllCasesList: (allCasesList: allCasesListType) =>\r\n    ({\r\n      type: 'acrm/cases/SET_ALL_CASES_LIST',\r\n      payload: allCasesList,\r\n    } as const),\r\n  setCurrentCase: (currentCase: caseType) =>\r\n    ({\r\n      type: 'acrm/cases/SET_CURRENT_CASE',\r\n      payload: currentCase,\r\n    } as const),\r\n  clearCurrentCase: () =>\r\n    ({\r\n      type: 'acrm/cases/CLEAR_CURRENT_CASE',\r\n    } as const),\r\n  deleteCase: (_id: string) =>\r\n    ({\r\n      type: 'acrm/cases/DELETE_CASE',\r\n      payload: _id,\r\n    } as const),\r\n}\r\n\r\n// Thunk creators\r\nexport const addNewCase = (newCase: caseType): ThunkType => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    await caseAPI.addCase(newCase)\r\n  } catch (error) {\r\n    dispatch(\r\n      errorActions.setError({\r\n        code: 1,\r\n        message: 'Что-то пошло не так...',\r\n      })\r\n    )\r\n  }\r\n}\r\n\r\nexport const getAllCases = (): ThunkType => async (dispatch) => {\r\n  try {\r\n    initializeLoading(dispatch)\r\n    const allCasesList: allCasesListType = await caseAPI.getAllCases()\r\n\r\n    dispatch(actions.setAllCasesList(allCasesList))\r\n\r\n    stopLoading(dispatch)\r\n  } catch (error) {\r\n    dispatch(\r\n      errorActions.setError({\r\n        code: 1,\r\n        message: 'Не удалось загрузить список заявок...',\r\n      })\r\n    )\r\n  }\r\n}\r\n\r\nexport const getCaseDetails = (_id: string): ThunkType => async (dispatch) => {\r\n  try {\r\n    initializeLoading(dispatch)\r\n\r\n    const currentCase = await caseAPI.getCurrentCase(_id)\r\n\r\n    dispatch(actions.setCurrentCase(currentCase!))\r\n\r\n    stopLoading(dispatch)\r\n  } catch (error) {\r\n    dispatch(\r\n      errorActions.setError({\r\n        code: 1,\r\n        message: 'Не удалось загрузить детали заявки...',\r\n      })\r\n    )\r\n  }\r\n}\r\n\r\nexport const editCurrentCase = (\r\n  editedCase: caseType,\r\n  _id: string\r\n): ThunkType => async (dispatch) => {\r\n  try {\r\n    initializeLoading(dispatch)\r\n\r\n    const savedEditedCase = await caseAPI.editCurrentCase(editedCase, _id)\r\n\r\n    stopLoading(dispatch)\r\n\r\n    dispatch(actions.setCurrentCase(savedEditedCase))\r\n    dispatch(getCaseDetails(_id))\r\n  } catch (error) {\r\n    dispatch(\r\n      errorActions.setError({\r\n        code: 1,\r\n        message: 'Не удалось редактировать заявку...',\r\n      })\r\n    )\r\n  }\r\n}\r\n\r\nexport const deleteCase = (_id: string): ThunkType => async (dispatch) => {\r\n  try {\r\n    await caseAPI.deleteCase(_id)\r\n\r\n    dispatch(actions.deleteCase(_id))\r\n  } catch (error) {\r\n    dispatch(\r\n      errorActions.setError({\r\n        code: 1,\r\n        message: 'Не удалось удалить заявку...',\r\n      })\r\n    )\r\n  }\r\n}\r\n",["300","301"],"D:\\Projects\\auto-crm\\client\\src\\layouts\\CasesInProgress\\CasesInProgressLayout.tsx",["302"],"import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { RootAppState } from '../../store'\r\nimport { allCasesListType } from '../../store/types/casesReducer.types'\r\nimport { getAllCasesInProgress } from '../../store/reducers/caseInProgress_reducer'\r\nimport { Loader } from '../../components/Loader/Loader'\r\nimport { NothingWasFetched } from '../../components/NothingWasFetched/NothingWasFetched'\r\nimport { AllCasesList } from '../../components/AllCasesList/AllCasesList'\r\nimport { ListLength } from '../../components/ListLength/ListLength'\r\nimport { useMessages } from '../../utils/useMessages'\r\nimport { clearError } from '../../utils/helpers'\r\nimport {\r\n  casesInProgressSelector,\r\n  errorsSelector,\r\n  loadingSelector,\r\n} from '../../store/selectors'\r\n\r\nexport const CasesInProgressLayout: React.FC = () => {\r\n  const loading = useSelector((state: RootAppState) => loadingSelector(state))\r\n  const error = useSelector((state: RootAppState) => errorsSelector(state))\r\n  const casesInProgressList: allCasesListType = useSelector(\r\n    (state: RootAppState) => casesInProgressSelector(state)\r\n  )\r\n  const { errorMessage } = useMessages()\r\n  const dispatch = useDispatch()\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getAllCasesInProgress())\r\n\r\n    if (error) {\r\n      errorMessage(error.message)\r\n    }\r\n    return () => clearError(dispatch)\r\n  }, [])\r\n\r\n  if (error) return <NothingWasFetched />\r\n\r\n  if (!casesInProgressList.length && !loading) return <NothingWasFetched />\r\n\r\n  return (\r\n    <div>\r\n      <div className='content-section'>\r\n        {casesInProgressList && !loading ? (\r\n          <ListLength length={casesInProgressList.length} />\r\n        ) : null}\r\n        {loading ? <Loader /> : <AllCasesList allCases={casesInProgressList} />}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","D:\\Projects\\auto-crm\\client\\src\\store\\api\\cases-in-progress-api.ts",["303"],"import { allCasesListType, caseType } from '../types/casesReducer.types'\r\nimport axios from './axios.config'\r\n\r\nexport const casesInProgressAPI = {\r\n  getAllCasesInProgress: async (): Promise<allCasesListType> => {\r\n    const casesInProgress = await axios.get('cases/inprogress')\r\n    return casesInProgress.data\r\n  },\r\n  takeCaseInProgress: async (_id: string): Promise<void> => {\r\n    await axios.put(`cases/toprogress/${_id}`)\r\n  },\r\n}\r\n","D:\\Projects\\auto-crm\\client\\src\\store\\reducers\\caseInProgress_reducer.ts",[],"D:\\Projects\\auto-crm\\client\\src\\layouts\\CompletedCasesLayout\\CompletedCasesLayout.tsx",["304"],"import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AllCasesList } from '../../components/AllCasesList/AllCasesList'\r\nimport { Loader } from '../../components/Loader/Loader'\r\nimport { ListLength } from '../../components/ListLength/ListLength'\r\nimport { NothingWasFetched } from '../../components/NothingWasFetched/NothingWasFetched'\r\nimport { RootAppState } from '../../store'\r\nimport { getAllCompletedCases } from '../../store/reducers/completedCase_Reducer'\r\nimport { allCasesListType } from '../../store/types/casesReducer.types'\r\nimport { clearError } from '../../utils/helpers'\r\nimport { useMessages } from '../../utils/useMessages'\r\nimport {\r\n  completedCasesSelector,\r\n  errorsSelector,\r\n  loadingSelector,\r\n} from '../../store/selectors'\r\n\r\nexport const CompletedCasesLayout: React.FC = () => {\r\n  const loading = useSelector((state: RootAppState) => loadingSelector(state))\r\n  const error = useSelector((state: RootAppState) => errorsSelector(state))\r\n  const completedCasesList: allCasesListType = useSelector(\r\n    (state: RootAppState) => completedCasesSelector(state)\r\n  )\r\n  const { errorMessage } = useMessages()\r\n  const dispatch = useDispatch()\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getAllCompletedCases())\r\n\r\n    if (error) {\r\n      errorMessage(error.message)\r\n    }\r\n    return () => clearError(dispatch)\r\n  }, [])\r\n\r\n  if (error) return <NothingWasFetched />\r\n\r\n  if (!completedCasesList.length && !loading) return <NothingWasFetched />\r\n\r\n  return (\r\n    <div>\r\n      <div className='content-section'>\r\n        {completedCasesList && !loading ? (\r\n          <ListLength length={completedCasesList.length} />\r\n        ) : null}\r\n        {loading ? <Loader /> : <AllCasesList allCases={completedCasesList} />}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","D:\\Projects\\auto-crm\\client\\src\\utils\\useContainElements.ts",["305"],"import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootAppState } from '../store'\r\nimport { getAllCompletedCases } from '../store/reducers/completedCase_Reducer'\r\nimport { getAllCases } from '../store/reducers/case_Reducer'\r\nimport {\r\n  casesInProgressSelector,\r\n  casesSelector,\r\n  completedCasesSelector,\r\n} from '../store/selectors'\r\nimport { getAllCasesInProgress } from '../store/reducers/caseInProgress_reducer'\r\n\r\nexport const useContainElements = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const cases = useSelector((state: RootAppState) => casesSelector(state))\r\n  const inProgress = useSelector((state: RootAppState) =>\r\n    casesInProgressSelector(state)\r\n  )\r\n  const completed = useSelector((state: RootAppState) =>\r\n    completedCasesSelector(state)\r\n  )\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getAllCases())\r\n    dispatch(getAllCasesInProgress())\r\n    dispatch(getAllCompletedCases())\r\n  }, [])\r\n\r\n  return { cases, inProgress, completed }\r\n}\r\n","D:\\Projects\\auto-crm\\client\\src\\reportWebVitals.ts",[],["306","307"],"D:\\Projects\\auto-crm\\client\\src\\components\\FormFields\\form-fields.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\components\\Loader\\Loader.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\components\\Navbar\\Navbar.tsx",["308"],"import React from 'react'\r\nimport { Button, Menu, Row } from 'antd'\r\nimport { ArrowLeftOutlined } from '@ant-design/icons'\r\nimport { useLocation, useHistory, NavLink } from 'react-router-dom'\r\nimport { findSelectedKey, items } from './navbar-keys-helpers'\r\nimport { useAuthentication } from '../../utils/useAuthentication'\r\nimport { authService } from '../../store/services/AuthenticationService'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nexport const Navbar: React.FC = () => {\r\n  // TODO useLocation type !!\r\n  const { logout } = useAuthentication()\r\n  const location: any = useLocation()\r\n  const history = useHistory()\r\n  const [selectedKey, setSelectedKey] = React.useState(\r\n    findSelectedKey(items, location)\r\n  )\r\n\r\n  const { i18n, t } = useTranslation()\r\n\r\n  const logoutHandler = () => {\r\n    logout()\r\n  }\r\n\r\n  const changeLanguageHandler = (language: string) => {\r\n    i18n.changeLanguage(language)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    setSelectedKey(findSelectedKey(items, location))\r\n  }, [location])\r\n\r\n  return (\r\n    <div style={{ display: 'flex' }}>\r\n      <Menu mode='horizontal' selectedKeys={[selectedKey!]}>\r\n        <Menu.Item\r\n          key='return'\r\n          icon={<ArrowLeftOutlined />}\r\n          onClick={() => history.goBack()}\r\n        >\r\n          {t('Назад')}\r\n        </Menu.Item>\r\n        {items.map((_item) => (\r\n          <Menu.Item key={_item.key}>\r\n            <NavLink to={_item.path}>{t(_item.label)}</NavLink>\r\n          </Menu.Item>\r\n        ))}\r\n        {authService.authenticationStatus ? (\r\n          <Menu.Item\r\n            key='logout'\r\n            icon={<ArrowLeftOutlined />}\r\n            onClick={logoutHandler}\r\n          >\r\n            {t('Выход')}\r\n          </Menu.Item>\r\n        ) : null}\r\n        <Button onClick={() => changeLanguageHandler('en')}>EN</Button>\r\n        <Button onClick={() => changeLanguageHandler('ru')}>RU</Button>\r\n      </Menu>\r\n    </div>\r\n  )\r\n}\r\n","D:\\Projects\\auto-crm\\client\\src\\components\\NothingWasFetched\\NothingWasFetched.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\utils\\useMessages.ts",[],"D:\\Projects\\auto-crm\\client\\src\\components\\ListLength\\ListLength.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\store\\reducers\\error_Reducer.ts",["309"],"import { ThunkAction } from 'redux-thunk'\r\nimport { ActionsTypes } from '../types/rootActionsType'\r\nimport { RootAppState } from '../../store'\r\nimport { errorType } from '../types/errorReducer.types'\r\n\r\nconst initialState = {\r\n  error: null as errorType,\r\n}\r\n\r\ntype initialStateType = typeof initialState\r\n\r\n// base thunk type\r\ntype ThunkType = ThunkAction<Promise<void>, RootAppState, unknown, ActionsTypes>\r\n\r\nexport const errorReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): initialStateType => {\r\n  switch (action.type) {\r\n    case 'acrm/errors/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      }\r\n    case 'acrm/errors/CLEAR_ERROR':\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const actions = {\r\n  setError: (error: errorType) =>\r\n    ({\r\n      type: 'acrm/errors/SET_ERROR',\r\n      payload: error,\r\n    } as const),\r\n  clearError: () =>\r\n    ({\r\n      type: 'acrm/errors/CLEAR_ERROR',\r\n    } as const),\r\n}\r\n","D:\\Projects\\auto-crm\\client\\src\\utils\\useNewCase.ts",["310","311","312"],"D:\\Projects\\auto-crm\\client\\src\\layouts\\PricesLayout\\PricesLayout.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\components\\PricesSearch\\PricesSearch.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\store\\reducers\\completedCase_Reducer.ts",[],"D:\\Projects\\auto-crm\\client\\src\\store\\api\\completed-cases.api.ts",[],"D:\\Projects\\auto-crm\\client\\src\\components\\Pricelist\\Pricelist.tsx",["313"],"D:\\Projects\\auto-crm\\client\\src\\store\\services\\PricelistService.ts",[],"D:\\Projects\\auto-crm\\client\\src\\components\\Pricelist\\PricelistItem\\PricelistItem.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\store\\api\\pricelist-api.ts",[],"D:\\Projects\\auto-crm\\client\\src\\components\\Pricelist\\pricelist-table-config.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\store\\services\\AppService.ts",[],"D:\\Projects\\auto-crm\\client\\src\\utils\\usePricelist.ts",["314"],"D:\\Projects\\auto-crm\\client\\src\\utils\\FuseSearch.ts",[],"D:\\Projects\\auto-crm\\client\\src\\layouts\\CostsLayout\\CostsLayout.tsx",["315","316"],"import { FC, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport { CostsList } from '../../components/CostsList/CostsList'\r\nimport { CreateCostsCard } from '../../components/CreateCostsCard/CreateCostsCard'\r\nimport { Loader } from '../../components/Loader/Loader'\r\nimport { PricelistSelect } from '../../components/PricelistSelect/PricelistSelect'\r\nimport { RootAppState } from '../../store'\r\nimport { getCaseDetails } from '../../store/reducers/case_Reducer'\r\nimport { currentCaseSelector, loadingSelector } from '../../store/selectors'\r\nimport { costsService } from '../../store/services/CostsService'\r\n\r\ntype Params = {\r\n  _id: string\r\n}\r\n\r\nexport const CostsLayout: FC = () => {\r\n  const currentCase = useSelector((state: RootAppState) =>\r\n    currentCaseSelector(state)\r\n  )\r\n  const loading = useSelector((state: RootAppState) => loadingSelector(state))\r\n  const { _id }: Params = useParams()\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (currentCase._id === _id) {\r\n      return\r\n    }\r\n    dispatch(getCaseDetails(_id))\r\n  }, [_id])\r\n\r\n  if (loading) {\r\n    return <Loader />\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n      <CreateCostsCard currentCase={currentCase} />\r\n      <PricelistSelect currentCase={currentCase} />\r\n      <CostsList _id={_id} currentCase={currentCase} />\r\n    </div>\r\n  )\r\n}\r\n","D:\\Projects\\auto-crm\\client\\src\\components\\CreateCostsCard\\CreateCostsCard.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\components\\CostsList\\CostsList.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\store\\services\\CostsService.ts",[],"D:\\Projects\\auto-crm\\client\\src\\components\\PricelistSelect\\PricelistSelect.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\utils\\usePricelistSelection.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\utils\\dineroHelpers.ts",[],"D:\\Projects\\auto-crm\\client\\src\\store\\api\\costs-api.ts",[],"D:\\Projects\\auto-crm\\client\\src\\utils\\useCostsList.tsx",["317"],"D:\\Projects\\auto-crm\\client\\src\\components\\Authentication\\LoginForm\\LoginForm.tsx",["318","319"],"import { FC, useRef } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport { Form, Input, Button } from 'antd'\r\nimport { layout, tailLayout } from '../form-config'\r\nimport { authService } from '../../../store/services/AuthenticationService'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useAuthentication } from '../../../utils/useAuthentication'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\ntype Values = {\r\n  userId: string\r\n  password: string\r\n}\r\n\r\nexport const LoginForm: FC = observer(() => {\r\n  const { login } = useAuthentication()\r\n  const { t } = useTranslation()\r\n  const history = useHistory()\r\n  const form = useRef<any>()\r\n  const onFinish = (values: Values) => {\r\n    login(values.userId, values.password)\r\n\r\n    form.current.resetFields()\r\n  }\r\n\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log('Failed:', errorInfo)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        {...layout}\r\n        ref={form}\r\n        name='basic'\r\n        initialValues={{ remember: true }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        style={{ marginTop: '100px' }}\r\n      >\r\n        <Form.Item\r\n          label='ID'\r\n          name='userId'\r\n          rules={[{ required: true, message: 'Please input your username!' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t('Пароль')}\r\n          name='password'\r\n          rules={[{ required: true, message: 'Please input your password!' }]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailLayout}>\r\n          <Button type='primary' htmlType='submit'>\r\n            {t('Войти')}\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  )\r\n})\r\n","D:\\Projects\\auto-crm\\client\\src\\layouts\\AuthLayout\\AuthLayout.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\utils\\ProtectedRoute.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\store\\services\\AuthenticationService.ts",["320"],"D:\\Projects\\auto-crm\\client\\src\\store\\api\\auth-api.ts",[],"D:\\Projects\\auto-crm\\client\\src\\utils\\useAuthentication.tsx",[],"D:\\Projects\\auto-crm\\client\\src\\localization\\i18n.ts",[],"D:\\Projects\\auto-crm\\client\\src\\components\\SideMenu\\SideMenu.tsx",[],{"ruleId":"321","replacedBy":"322"},{"ruleId":"323","replacedBy":"324"},{"ruleId":"325","severity":1,"message":"326","line":3,"column":10,"nodeType":"327","messageId":"328","endLine":3,"endColumn":14},{"ruleId":"325","severity":1,"message":"329","line":7,"column":7,"nodeType":"327","messageId":"328","endLine":7,"endColumn":37},{"ruleId":"321","replacedBy":"330"},{"ruleId":"323","replacedBy":"331"},{"ruleId":"321","replacedBy":"332"},{"ruleId":"323","replacedBy":"333"},{"ruleId":"334","severity":1,"message":"335","line":34,"column":6,"nodeType":"336","endLine":34,"endColumn":8,"suggestions":"337"},{"ruleId":"325","severity":1,"message":"338","line":13,"column":10,"nodeType":"327","messageId":"328","endLine":13,"endColumn":16},{"ruleId":"334","severity":1,"message":"339","line":31,"column":6,"nodeType":"336","endLine":31,"endColumn":8,"suggestions":"340"},{"ruleId":"325","severity":1,"message":"341","line":2,"column":10,"nodeType":"327","messageId":"328","endLine":2,"endColumn":15},{"ruleId":"334","severity":1,"message":"342","line":45,"column":6,"nodeType":"336","endLine":45,"endColumn":13,"suggestions":"343"},{"ruleId":"334","severity":1,"message":"344","line":30,"column":6,"nodeType":"336","endLine":30,"endColumn":8,"suggestions":"345"},{"ruleId":"346","severity":1,"message":"347","line":35,"column":37,"nodeType":"348","messageId":"349","endLine":35,"endColumn":39},{"ruleId":"321","replacedBy":"350"},{"ruleId":"323","replacedBy":"351"},{"ruleId":"325","severity":1,"message":"352","line":9,"column":3,"nodeType":"327","messageId":"328","endLine":9,"endColumn":16},{"ruleId":"325","severity":1,"message":"353","line":11,"column":21,"nodeType":"327","messageId":"328","endLine":11,"endColumn":42},{"ruleId":"321","replacedBy":"354"},{"ruleId":"323","replacedBy":"355"},{"ruleId":"334","severity":1,"message":"335","line":34,"column":6,"nodeType":"336","endLine":34,"endColumn":8,"suggestions":"356"},{"ruleId":"325","severity":1,"message":"357","line":1,"column":28,"nodeType":"327","messageId":"328","endLine":1,"endColumn":36},{"ruleId":"334","severity":1,"message":"335","line":34,"column":6,"nodeType":"336","endLine":34,"endColumn":8,"suggestions":"358"},{"ruleId":"334","severity":1,"message":"359","line":28,"column":6,"nodeType":"336","endLine":28,"endColumn":8,"suggestions":"360"},{"ruleId":"321","replacedBy":"361"},{"ruleId":"323","replacedBy":"362"},{"ruleId":"325","severity":1,"message":"363","line":2,"column":24,"nodeType":"327","messageId":"328","endLine":2,"endColumn":27},{"ruleId":"325","severity":1,"message":"364","line":13,"column":6,"nodeType":"327","messageId":"328","endLine":13,"endColumn":15},{"ruleId":"325","severity":1,"message":"365","line":13,"column":11,"nodeType":"327","messageId":"328","endLine":13,"endColumn":25},{"ruleId":"325","severity":1,"message":"366","line":14,"column":9,"nodeType":"327","messageId":"328","endLine":14,"endColumn":16},{"ruleId":"334","severity":1,"message":"367","line":30,"column":6,"nodeType":"336","endLine":30,"endColumn":23,"suggestions":"368"},{"ruleId":"334","severity":1,"message":"369","line":18,"column":6,"nodeType":"336","endLine":18,"endColumn":30,"suggestions":"370"},{"ruleId":"334","severity":1,"message":"371","line":36,"column":6,"nodeType":"336","endLine":36,"endColumn":35,"suggestions":"372"},{"ruleId":"325","severity":1,"message":"373","line":11,"column":10,"nodeType":"327","messageId":"328","endLine":11,"endColumn":22},{"ruleId":"334","severity":1,"message":"374","line":30,"column":6,"nodeType":"336","endLine":30,"endColumn":11,"suggestions":"375"},{"ruleId":"334","severity":1,"message":"376","line":19,"column":6,"nodeType":"336","endLine":19,"endColumn":8,"suggestions":"377"},{"ruleId":"325","severity":1,"message":"378","line":5,"column":10,"nodeType":"327","messageId":"328","endLine":5,"endColumn":21},{"ruleId":"325","severity":1,"message":"366","line":18,"column":9,"nodeType":"327","messageId":"328","endLine":18,"endColumn":16},{"ruleId":"325","severity":1,"message":"379","line":5,"column":10,"nodeType":"327","messageId":"328","endLine":5,"endColumn":23},"no-native-reassign",["380"],"no-negated-in-lhs",["381"],"@typescript-eslint/no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'gridStyle' is assigned a value but never used.",["380"],["381"],["380"],["381"],"react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'dispatch', 'error', and 'errorMessage'. Either include them or remove the dependency array.","ArrayExpression",["382"],"'Navbar' is defined but never used.","React Hook useEffect has a missing dependency: 'verification'. Either include it or remove the dependency array.",["383"],"'match' is defined but never used.","React Hook React.useEffect has missing dependencies: 'dispatch' and 'errorMessage'. Either include them or remove the dependency array.",["384"],"React Hook React.useEffect has missing dependencies: '_id', 'currentEditedCase._id', and 'dispatch'. Either include them or remove the dependency array.",["385"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["380"],["381"],"'separateCases' is defined but never used.","'caseInProgressActions' is defined but never used.",["380"],["381"],["386"],"'caseType' is defined but never used.",["387"],"React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["388"],["380"],["381"],"'Row' is defined but never used.","'ThunkType' is defined but never used.","'successMessage' is assigned a value but never used.","'history' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'errorMessage'. Either include it or remove the dependency array.",["389"],"React Hook React.useEffect has an unnecessary dependency: 'fuse.searchQueryGetter'. Either exclude it or remove the dependency array. Outer scope values like 'fuse.searchQueryGetter' aren't valid dependencies because mutating them doesn't re-render the component.",["390"],"React Hook React.useEffect has an unnecessary dependency: 'pricelistService.priceslist'. Either exclude it or remove the dependency array. Outer scope values like 'pricelistService.priceslist' aren't valid dependencies because mutating them doesn't re-render the component.",["391"],"'costsService' is defined but never used.","React Hook useEffect has missing dependencies: 'currentCase._id' and 'dispatch'. Either include them or remove the dependency array.",["392"],"React Hook useEffect has a missing dependency: 'currentCase._id'. Either include it or remove the dependency array.",["393"],"'authService' is defined but never used.","'tokenToString' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"394","fix":"395"},{"desc":"396","fix":"397"},{"desc":"394","fix":"398"},{"desc":"399","fix":"400"},{"desc":"394","fix":"401"},{"desc":"394","fix":"402"},{"desc":"403","fix":"404"},{"desc":"405","fix":"406"},{"desc":"407","fix":"408"},{"desc":"407","fix":"409"},{"desc":"410","fix":"411"},{"desc":"412","fix":"413"},"Update the dependencies array to be: [dispatch, error, errorMessage]",{"range":"414","text":"415"},"Update the dependencies array to be: [verification]",{"range":"416","text":"417"},{"range":"418","text":"415"},"Update the dependencies array to be: [_id, currentEditedCase._id, dispatch]",{"range":"419","text":"420"},{"range":"421","text":"415"},{"range":"422","text":"415"},"Update the dependencies array to be: [dispatch]",{"range":"423","text":"424"},"Update the dependencies array to be: [error, dispatch, errorMessage]",{"range":"425","text":"426"},"Update the dependencies array to be: []",{"range":"427","text":"428"},{"range":"429","text":"428"},"Update the dependencies array to be: [_id, currentCase._id, dispatch]",{"range":"430","text":"431"},"Update the dependencies array to be: [currentCase._id]",{"range":"432","text":"433"},[1315,1317],"[dispatch, error, errorMessage]",[1505,1507],"[verification]",[1640,1647],[949,951],"[_id, currentEditedCase._id, dispatch]",[1383,1385],[1376,1378],[955,957],"[dispatch]",[952,969],"[error, dispatch, errorMessage]",[675,699],"[]",[969,998],[1137,1142],"[_id, currentCase._id, dispatch]",[675,677],"[currentCase._id]"]